{"version":3,"sources":["pages/components/Progress.js"],"names":["NavLink","React","forwardRef","props","ref","innerRef","Card","styled","MuiCard","spacing","Divider","MuiDivider","Breadcrumbs","MuiBreadcrumbs","Paper","MuiPaper","CircularProgress","MuiCircularProgress","LinearProgress","MuiLinearProgress","CircularIndeterminate","mb","variant","gutterBottom","mt","m","color","CircularDeterminate","state","completed","progress","setState","this","timer","setInterval","clearInterval","value","Component","CircularStatic","LinearIndeterminate","my","LinearDeterminate","diff","Math","random","min","LinearBuffer","buffer","diff2","valueBuffer","LinearQuery","Progress","Fragment","title","display","aria-label","component","exact","to","container","item","xs","md"],"mappings":"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","file":"static/js/74.5ff50807.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\r\n\r\nimport Helmet from 'react-helmet';\r\n\r\nimport {\r\n  CardContent,\r\n  Grid,\r\n  Link,\r\n  Breadcrumbs as MuiBreadcrumbs,\r\n  Card as MuiCard,\r\n  CircularProgress as MuiCircularProgress,\r\n  Divider as MuiDivider,\r\n  LinearProgress as MuiLinearProgress,\r\n  Paper as MuiPaper,\r\n  Typography\r\n} from \"@material-ui/core\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nconst NavLink = React.forwardRef((props, ref) => (\r\n  <RouterNavLink innerRef={ref} {...props} />\r\n));\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nconst Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\r\n\r\nconst Paper = styled(MuiPaper)(spacing);\r\n\r\nconst CircularProgress = styled(MuiCircularProgress)(spacing);\r\n\r\nconst LinearProgress = styled(MuiLinearProgress)(spacing);\r\n\r\nfunction CircularIndeterminate() {\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Circular Indeterminate\r\n        </Typography>\r\n        <Paper mt={3}>\r\n          <CircularProgress m={2} />\r\n          <CircularProgress m={2} color=\"secondary\" />\r\n        </Paper>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nclass CircularDeterminate extends React.Component {\r\n  state = {\r\n    completed: 0\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.timer = setInterval(this.progress, 20);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timer);\r\n  }\r\n\r\n  progress = () => {\r\n    const { completed } = this.state;\r\n    this.setState({ completed: completed >= 100 ? 0 : completed + 1 });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card mb={6}>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Circular Determinate\r\n          </Typography>\r\n          <Paper mt={3}>\r\n            <CircularProgress\r\n              m={2}\r\n              variant=\"determinate\"\r\n              value={this.state.completed}\r\n            />\r\n            <CircularProgress\r\n              m={2}\r\n              variant=\"determinate\"\r\n              value={this.state.completed}\r\n              color=\"secondary\"\r\n            />\r\n          </Paper>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nfunction CircularStatic() {\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Circular Static\r\n        </Typography>\r\n        <Paper mt={3}>\r\n          <CircularProgress m={2} variant=\"static\" value={5} />\r\n          <CircularProgress m={2} variant=\"static\" value={25} />\r\n          <CircularProgress m={2} variant=\"static\" value={50} />\r\n          <CircularProgress m={2} variant=\"static\" value={75} />\r\n          <CircularProgress m={2} variant=\"static\" value={100} />\r\n        </Paper>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction LinearIndeterminate() {\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Linear Indeterminate\r\n        </Typography>\r\n        <Paper mt={3}>\r\n          <LinearProgress my={2} />\r\n          <LinearProgress my={2} color=\"secondary\" />\r\n        </Paper>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nclass LinearDeterminate extends React.Component {\r\n  state = {\r\n    completed: 0\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.timer = setInterval(this.progress, 500);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timer);\r\n  }\r\n\r\n  progress = () => {\r\n    const { completed } = this.state;\r\n    if (completed === 100) {\r\n      this.setState({ completed: 0 });\r\n    } else {\r\n      const diff = Math.random() * 10;\r\n      this.setState({ completed: Math.min(completed + diff, 100) });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card mb={6}>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Linear Determinate\r\n          </Typography>\r\n          <Paper mt={3}>\r\n            <LinearProgress\r\n              my={2}\r\n              variant=\"determinate\"\r\n              value={this.state.completed}\r\n            />\r\n            <LinearProgress\r\n              my={2}\r\n              variant=\"determinate\"\r\n              value={this.state.completed}\r\n              color=\"secondary\"\r\n            />\r\n          </Paper>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nclass LinearBuffer extends React.Component {\r\n  state = {\r\n    completed: 0,\r\n    buffer: 10\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.timer = setInterval(this.progress, 500);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timer);\r\n  }\r\n\r\n  progress = () => {\r\n    const { completed } = this.state;\r\n    if (completed > 100) {\r\n      this.setState({ completed: 0, buffer: 10 });\r\n    } else {\r\n      const diff = Math.random() * 10;\r\n      const diff2 = Math.random() * 10;\r\n      this.setState({\r\n        completed: completed + diff,\r\n        buffer: completed + diff + diff2\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card mb={6}>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Linear Buffer\r\n          </Typography>\r\n          <Paper mt={3}>\r\n            <LinearProgress\r\n              my={2}\r\n              variant=\"buffer\"\r\n              value={this.state.completed}\r\n              valueBuffer={this.state.buffer}\r\n            />\r\n            <LinearProgress\r\n              my={2}\r\n              variant=\"buffer\"\r\n              value={this.state.completed}\r\n              valueBuffer={this.state.buffer}\r\n              color=\"secondary\"\r\n            />\r\n          </Paper>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nfunction LinearQuery() {\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Linear Query\r\n        </Typography>\r\n        <Paper mt={3}>\r\n          <LinearProgress my={2} variant=\"query\" />\r\n          <LinearProgress my={2} variant=\"query\" color=\"secondary\" />\r\n        </Paper>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction Progress() {\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet title=\"Progress\" />\r\n      <Typography variant=\"h3\" gutterBottom display=\"inline\">\r\n        Progress\r\n      </Typography>\r\n\r\n      <Breadcrumbs aria-label=\"Breadcrumb\" mt={2}>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Dashboard\r\n        </Link>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Components\r\n        </Link>\r\n        <Typography>Progress</Typography>\r\n      </Breadcrumbs>\r\n\r\n      <Divider my={6} />\r\n\r\n      <Grid container spacing={6}>\r\n        <Grid item xs={12} md={6}>\r\n          <CircularIndeterminate />\r\n          <CircularDeterminate />\r\n          <CircularStatic />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <LinearIndeterminate />\r\n          <LinearDeterminate />\r\n          <LinearBuffer />\r\n          <LinearQuery />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Progress;\r\n"],"sourceRoot":""}