{"version":3,"sources":["pages/components/Alerts.js"],"names":["NavLink","React","forwardRef","props","ref","innerRef","Card","styled","MuiCard","spacing","Spacer","div","Divider","MuiDivider","Breadcrumbs","MuiBreadcrumbs","Alert","MuiAlert","SimpleAlerts","mb","variant","gutterBottom","severity","OutlinedAlerts","FilledAlerts","AdvancedAlerts","ActionAlerts","onClose","action","color","size","TransitionAlerts","useState","open","setOpen","in","aria-label","onClick","fontSize","disabled","Alerts","Fragment","title","display","mt","component","exact","to","my","container","item","xs","md"],"mappings":"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","file":"static/js/68.a6cbee71.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\r\n\r\nimport Helmet from 'react-helmet';\r\n\r\nimport {\r\n  Button,\r\n  CardContent,\r\n  Collapse,\r\n  Grid,\r\n  IconButton,\r\n  Link,\r\n  Breadcrumbs as MuiBreadcrumbs,\r\n  Card as MuiCard,\r\n  Divider as MuiDivider,\r\n  Typography\r\n} from \"@material-ui/core\";\r\n\r\nimport { Close as CloseIcon } from '@material-ui/icons';\r\n\r\nimport { Alert as MuiAlert, AlertTitle } from '@material-ui/lab';\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nconst NavLink = React.forwardRef((props, ref) => (\r\n  <RouterNavLink innerRef={ref} {...props} />\r\n));\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Spacer = styled.div(spacing);\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nconst Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\r\n\r\nconst Alert = styled(MuiAlert)(spacing);\r\n\r\nfunction SimpleAlerts() {\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Simple alerts\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          The alert offers four severity levels that set a distinctive icon and color.\r\n        </Typography>\r\n\r\n        <Spacer mb={4} />\r\n\r\n        <Alert mb={4} severity=\"error\">This is an error alert — check it out!</Alert>\r\n        <Alert mb={4} severity=\"warning\">This is a warning alert — check it out!</Alert>\r\n        <Alert mb={4} severity=\"info\">This is an info alert — check it out!</Alert>\r\n        <Alert severity=\"success\">This is a success alert — check it out!</Alert>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction OutlinedAlerts() {\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Outlined alerts\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Two additional variants are available – outlined, and filled:\r\n        </Typography>\r\n\r\n        <Spacer mb={4} />\r\n\r\n        <Alert mb={4} variant=\"outlined\" severity=\"error\">This is an error alert — check it out!</Alert>\r\n        <Alert mb={4} variant=\"outlined\" severity=\"warning\">This is a warning alert — check it out!</Alert>\r\n        <Alert mb={4} variant=\"outlined\" severity=\"info\">This is an info alert — check it out!</Alert>\r\n        <Alert variant=\"outlined\" severity=\"success\">This is a success alert — check it out!</Alert>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction FilledAlerts() {\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Filled alerts\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Two additional variants are available – outlined, and filled:\r\n        </Typography>\r\n\r\n        <Spacer mb={4} />\r\n\r\n        <Alert mb={4} variant=\"filled\" severity=\"error\">This is an error alert — check it out!</Alert>\r\n        <Alert mb={4} variant=\"filled\" severity=\"warning\">This is a warning alert — check it out!</Alert>\r\n        <Alert mb={4} variant=\"filled\" severity=\"info\">This is an info alert — check it out!</Alert>\r\n        <Alert variant=\"filled\" severity=\"success\">This is a success alert — check it out!</Alert>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction AdvancedAlerts() {\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Advanced alerts\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          You can use the AlertTitle component to display a formatted title above the content.\r\n        </Typography>\r\n\r\n        <Spacer mb={4} />\r\n\r\n        <Alert mb={4} severity=\"error\">\r\n          <AlertTitle>Error</AlertTitle>\r\n          This is an error alert — <strong>check it out!</strong>\r\n        </Alert>\r\n        <Alert mb={4} severity=\"warning\">\r\n          <AlertTitle>Warning</AlertTitle>\r\n          This is a warning alert — <strong>check it out!</strong>\r\n        </Alert>\r\n        <Alert mb={4} severity=\"info\">\r\n          <AlertTitle>Info</AlertTitle>\r\n          This is an info alert — <strong>check it out!</strong>\r\n        </Alert>\r\n        <Alert mb={4} severity=\"success\">\r\n          <AlertTitle>Success</AlertTitle>\r\n          This is a success alert — <strong>check it out!</strong>\r\n        </Alert>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction ActionAlerts() {\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Actions\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          An alert can have an action, such as a close or undo button. It is rendered after the message, at the end of the alert.\r\n        </Typography>\r\n\r\n        <Spacer mb={4} />\r\n\r\n        <Alert mb={4} onClose={() => {}}>This is a success alert — check it out!</Alert>\r\n        <Alert\r\n          action={\r\n            <Button color=\"inherit\" size=\"small\">\r\n              UNDO\r\n            </Button>\r\n          }\r\n        >\r\n          This is a success alert — check it out!\r\n        </Alert>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction TransitionAlerts() {\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Transition\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          You can use a transition component such as Collapse to transition the appearance of the alert.\r\n        </Typography>\r\n\r\n        <Spacer mb={4} />\r\n\r\n        <Collapse in={open}>\r\n          <Alert\r\n            mb={4}\r\n            action={\r\n              <IconButton\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                size=\"small\"\r\n                onClick={() => {\r\n                  setOpen(false);\r\n                }}\r\n              >\r\n                <CloseIcon fontSize=\"inherit\" />\r\n              </IconButton>\r\n            }\r\n          >\r\n            Close me!\r\n          </Alert>\r\n        </Collapse>\r\n        <Button\r\n          disabled={open}\r\n          variant=\"outlined\"\r\n          onClick={() => {\r\n            setOpen(true);\r\n          }}\r\n        >\r\n          Re-open\r\n        </Button>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction Alerts() {\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet title=\"Alerts\" />\r\n      <Typography variant=\"h3\" gutterBottom display=\"inline\">\r\n        Alerts\r\n      </Typography>\r\n\r\n      <Breadcrumbs aria-label=\"Breadcrumb\" mt={2}>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Dashboard\r\n        </Link>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Components\r\n        </Link>\r\n        <Typography>Alerts</Typography>\r\n      </Breadcrumbs>\r\n\r\n      <Divider my={6} />\r\n\r\n      <Grid container spacing={6}>\r\n        <Grid item xs={12} md={6}>\r\n          <SimpleAlerts />\r\n          <OutlinedAlerts />\r\n          <FilledAlerts />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <AdvancedAlerts />\r\n          <ActionAlerts />\r\n          <TransitionAlerts />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Alerts;\r\n"],"sourceRoot":""}