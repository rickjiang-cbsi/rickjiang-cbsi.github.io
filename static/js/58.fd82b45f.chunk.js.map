{"version":3,"sources":["pages/dashboards/index.tsx","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/Divider/Divider.js"],"names":["Card","styled","MuiCard","spacing","Divider","MuiDivider","EmptyCard","mb","variant","gutterBottom","Dashboard","Fragment","title","display","my","container","item","xs","React","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","CardContent","_props$component","component","Component","padding","paddingBottom","_props$absolute","absolute","_props$flexItem","flexItem","_props$light","light","_props$orientation","orientation","_props$role","role","undefined","_props$variant","vertical","theme","height","margin","border","flexShrink","backgroundColor","palette","divider","position","bottom","left","width","inset","marginLeft","fade","middle","marginRight","alignSelf"],"mappings":"4HAAA,gGAsBMA,EAAOC,YAAOC,IAAPD,CAAgBE,KAEvBC,EAAUH,YAAOI,IAAPJ,CAAmBE,KAInC,SAASG,IACP,OACE,kBAACN,EAAD,CAAMO,GAAI,GACR,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYC,QAAQ,KAAKC,cAAY,GAArC,cAGA,kBAAC,IAAD,CAAYD,QAAQ,QAAQC,cAAY,GAAxC,gBAqCOC,UA7Bf,WACE,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,SAAD,CAAQC,MAAM,cACd,kBAAC,IAAD,CAAYJ,QAAQ,KAAKC,cAAY,EAACI,QAAQ,UAA9C,sCAcA,kBAACT,EAAD,CAASU,GAAI,IAEb,kBAAC,IAAD,CAAMC,WAAS,EAACZ,QAAS,GACvB,kBAAC,IAAD,CAAMa,MAAI,EAACC,GAAI,IACb,kBAACX,EAAD,W,iCCjEV,uDAaIN,EAAOkB,cAAiB,SAAcC,EAAOC,GAC/C,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAgBJ,EAAMK,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAQC,YAAyBP,EAAO,CAAC,UAAW,YAAa,WAErE,OAAoBD,gBAAoBS,IAAOC,YAAS,CACtDN,UAAWO,YAAKR,EAAQS,KAAMR,GAC9BS,UAAWP,EAAS,EAAI,EACxBJ,IAAKA,GACJK,OA6BUO,gBA9CK,CAElBF,KAAM,CACJG,SAAU,WA2CoB,CAChCC,KAAM,WADOF,CAEZhC,I,iCCvDH,8CAeImC,EAAcjB,cAAiB,SAAqBC,EAAOC,GAC7D,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBc,EAAmBjB,EAAMkB,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDX,EAAQC,YAAyBP,EAAO,CAAC,UAAW,YAAa,cAErE,OAAoBD,gBAAoBoB,EAAWV,YAAS,CAC1DN,UAAWO,YAAKR,EAAQS,KAAMR,GAC9BF,IAAKA,GACJK,OAyBUO,gBA5CK,CAElBF,KAAM,CACJS,QAAS,GACT,eAAgB,CACdC,cAAe,MAuCa,CAChCN,KAAM,kBADOF,CAEZG,I,iCCpDH,sDAwDI/B,EAAUc,cAAiB,SAAiBC,EAAOC,GACrD,IAAIqB,EAAkBtB,EAAMuB,SACxBA,OAA+B,IAApBD,GAAqCA,EAChDpB,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBc,EAAmBjB,EAAMkB,UACzBC,OAAiC,IAArBF,EAA8B,KAAOA,EACjDO,EAAkBxB,EAAMyB,SACxBA,OAA+B,IAApBD,GAAqCA,EAChDE,EAAe1B,EAAM2B,MACrBA,OAAyB,IAAjBD,GAAkCA,EAC1CE,EAAqB5B,EAAM6B,YAC3BA,OAAqC,IAAvBD,EAAgC,aAAeA,EAC7DE,EAAc9B,EAAM+B,KACpBA,OAAuB,IAAhBD,EAAuC,OAAdX,EAAqB,iBAAca,EAAYF,EAC/EG,EAAiBjC,EAAMX,QACvBA,OAA6B,IAAnB4C,EAA4B,YAAcA,EACpD3B,EAAQC,YAAyBP,EAAO,CAAC,WAAY,UAAW,YAAa,YAAa,WAAY,QAAS,cAAe,OAAQ,YAE1I,OAAoBD,gBAAoBoB,EAAWV,YAAS,CAC1DN,UAAWO,YAAKR,EAAQS,KAAMR,EAAuB,cAAZd,GAA2Ba,EAAQb,GAAUkC,GAAYrB,EAAQqB,SAAUE,GAAYvB,EAAQuB,SAAUE,GAASzB,EAAQyB,MAAuB,aAAhBE,GAA8B3B,EAAQgC,UAChNH,KAAMA,EACN9B,IAAKA,GACJK,OAmDUO,iBA3HK,SAAgBsB,GAClC,MAAO,CAELxB,KAAM,CACJyB,OAAQ,EACRC,OAAQ,EAERC,OAAQ,OACRC,WAAY,EACZC,gBAAiBL,EAAMM,QAAQC,SAIjCnB,SAAU,CACRoB,SAAU,WACVC,OAAQ,EACRC,KAAM,EACNC,MAAO,QAITC,MAAO,CACLC,WAAY,IAIdrB,MAAO,CACLa,gBAAiBS,YAAKd,EAAMM,QAAQC,QAAS,MAI/CQ,OAAQ,CACNF,WAAYb,EAAMnD,QAAQ,GAC1BmE,YAAahB,EAAMnD,QAAQ,IAI7BkD,SAAU,CACRE,OAAQ,OACRU,MAAO,GAITrB,SAAU,CACR2B,UAAW,UACXhB,OAAQ,WA8EoB,CAChCrB,KAAM,cADOF,CAEZ5B","file":"static/js/58.fd82b45f.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n// import { NavLink as RouterNavLink } from \"react-router-dom\";\n\nimport { Helmet } from \"react-helmet\";\n\nimport {\n  CardContent,\n  Grid,\n  // Link,\n  // Breadcrumbs as MuiBreadcrumbs,\n  Card as MuiCard,\n  Divider as MuiDivider,\n  Typography,\n} from \"@material-ui/core\";\n\nimport { spacing } from \"@material-ui/system\";\n\n// const NavLink = React.forwardRef((props: any, ref: any) => (\n//   <RouterNavLink innerRef={ref} {...props} />\n// ));\n\nconst Card = styled(MuiCard)(spacing);\n\nconst Divider = styled(MuiDivider)(spacing);\n\n// const Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\n\nfunction EmptyCard() {\n  return (\n    <Card mb={6}>\n      <CardContent>\n        <Typography variant=\"h6\" gutterBottom>\n          Empty card\n        </Typography>\n        <Typography variant=\"body2\" gutterBottom>\n          Empty card\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n\nfunction Dashboard() {\n  return (\n    <React.Fragment>\n      <Helmet title=\"Dashboard\" />\n      <Typography variant=\"h3\" gutterBottom display=\"inline\">\n        Welcome to Video Robot Version 7.3\n      </Typography>\n\n      {/* <Breadcrumbs aria-label=\"Breadcrumb\" mt={2}>\n        <Link component={NavLink} exact to=\"/\">\n          Dashboard\n        </Link>\n        <Link component={NavLink} exact to=\"/\">\n          Pages\n        </Link>\n        <Typography>Blank</Typography>\n      </Breadcrumbs> */}\n\n      <Divider my={6} />\n\n      <Grid container spacing={6}>\n        <Grid item xs={12}>\n          <EmptyCard />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default Dashboard;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 1,\n      margin: 0,\n      // Reset browser default style.\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      backgroundColor: fade(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      width: 1\n    },\n\n    /* Styles applied to the root element if `flexItem={true}`. */\n    flexItem: {\n      alignSelf: 'stretch',\n      height: 'auto'\n    }\n  };\n};\nvar Divider = React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$flexItem = props.flexItem,\n      flexItem = _props$flexItem === void 0 ? false : _props$flexItem,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, orientation === 'vertical' && classes.vertical),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);"],"sourceRoot":""}