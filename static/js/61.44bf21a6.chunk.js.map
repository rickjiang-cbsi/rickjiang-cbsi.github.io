{"version":3,"sources":["pages/pages/Settings.js","../node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","../node_modules/@material-ui/core/esm/Avatar/Avatar.js","../node_modules/@material-ui/icons/esm/CloudUpload.js"],"names":["NavLink","React","forwardRef","props","ref","innerRef","Breadcrumbs","styled","MuiBreadcrumbs","spacing","Card","MuiCard","Divider","MuiDivider","FormControl","MuiFormControl","TextField","MuiTextField","Button","MuiButton","CloudUpload","MuiCloudUpload","CenteredContent","div","BigAvatar","Avatar","theme","Public","mb","variant","gutterBottom","container","item","md","id","label","defaultValue","fullWidth","my","multiline","rows","rowsMax","alt","src","accept","style","display","multiple","type","htmlFor","color","component","mr","Private","mt","Settings","Fragment","title","aria-label","exact","to","xs","createSvgIcon","d","childrenProp","children","classes","className","_props$component","Component","imgProps","sizes","srcSet","_props$variant","other","_objectWithoutProperties","loaded","_ref","_React$useState","setLoaded","active","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","_extends","img","Person","fallback","clsx","root","system","colorDefault","withStyles","position","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","palette","background","default","backgroundColor","grey","circle","rounded","shape","square","textAlign","objectFit","textIndent","name","createElement"],"mappings":"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","file":"static/js/61.44bf21a6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\r\n\r\nimport Helmet from 'react-helmet';\r\n\r\nimport {\r\n  Avatar,\r\n  Breadcrumbs as MuiBreadcrumbs,\r\n  Button as MuiButton,\r\n  Card as MuiCard,\r\n  CardContent,\r\n  Divider as MuiDivider,\r\n  FormControl as MuiFormControl,\r\n  Grid,\r\n  Link,\r\n  TextField as MuiTextField,\r\n  Typography\r\n} from \"@material-ui/core\";\r\n\r\nimport { CloudUpload as MuiCloudUpload } from \"@material-ui/icons\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nconst NavLink = React.forwardRef((props, ref) => (\r\n  <RouterNavLink innerRef={ref} {...props} />\r\n));\r\n\r\nconst Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nconst FormControl = styled(MuiFormControl)(spacing);\r\n\r\nconst TextField = styled(MuiTextField)(spacing);\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CloudUpload = styled(MuiCloudUpload)(spacing);\r\n\r\nconst CenteredContent = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst BigAvatar = styled(Avatar)`\r\n  width: 120px;\r\n  height: 120px;\r\n  margin: 0 auto ${props => props.theme.spacing(2)}px;\r\n`;\r\n\r\nfunction Public() {\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Public info\r\n        </Typography>\r\n\r\n        <Grid container spacing={6}>\r\n          <Grid item md={8}>\r\n            <TextField id=\"username\" label=\"Username\" defaultValue=\"lucylavender\" variant=\"outlined\" fullWidth my={2} />\r\n\r\n            <FormControl fullWidth my={2} variant=\"outlined\">\r\n              <TextField\r\n                label=\"Biography\"\r\n                id=\"biography\"\r\n                multiline={true}\r\n                rows={3}\r\n                rowsMax={4}\r\n                variant=\"outlined\"\r\n                defaultValue=\"Lucy is a Freelance Writer and Social Media Manager who helps finance professionals and Fin-tech startups build an audience and get more paying clients online.\"\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item md={4}>\r\n            <CenteredContent>\r\n              <BigAvatar\r\n                alt=\"Remy Sharp\"\r\n                src=\"/static/img/avatars/avatar-1.jpg\"\r\n              />\r\n              <input\r\n                accept=\"image/*\"\r\n                style={{ display: \"none\" }}\r\n                id=\"raised-button-file\"\r\n                multiple\r\n                type=\"file\"\r\n              />\r\n              <label htmlFor=\"raised-button-file\">\r\n                <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                  <CloudUpload mr={2} /> Upload\r\n                </Button>\r\n\r\n                <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                  For best results, use an image at least 128px by 128px in .jpg\r\n                  format\r\n                </Typography>\r\n              </label>\r\n            </CenteredContent>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Button variant=\"contained\" color=\"primary\">\r\n          Save changes\r\n        </Button>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction Private() {\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Private info\r\n        </Typography>\r\n\r\n        <Grid container spacing={6}>\r\n          <Grid item md={6}>\r\n            <TextField id=\"first-name\" label=\"First name\" variant=\"outlined\" defaultValue=\"Lucy\" fullWidth my={2} />\r\n          </Grid>\r\n          <Grid item md={6}>\r\n            <TextField id=\"last-name\" label=\"Last name\" variant=\"outlined\" defaultValue=\"Lavender\" fullWidth my={2} />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <TextField id=\"email\" label=\"Email\" variant=\"outlined\" type=\"email\" defaultValue=\"lucylavender@gmail.com\" fullWidth my={2} />\r\n\r\n        <TextField id=\"address\" label=\"Address\" variant=\"outlined\" fullWidth my={2} />\r\n\r\n        <TextField id=\"address2\" label=\"Apartment, studio, or floor\" variant=\"outlined\" fullWidth my={2} />\r\n\r\n        <Grid container spacing={6}>\r\n          <Grid item md={6}>\r\n            <TextField id=\"city\" label=\"City\" variant=\"outlined\" fullWidth my={2} />\r\n          </Grid>\r\n          <Grid item md={4}>\r\n            <TextField id=\"state\" label=\"State\" variant=\"outlined\" fullWidth my={2} />\r\n          </Grid>\r\n          <Grid item md={2}>\r\n            <TextField id=\"zip\" label=\"Zip\" variant=\"outlined\" fullWidth my={2} />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Button variant=\"contained\" color=\"primary\" mt={3}>\r\n          Save changes\r\n        </Button>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction Settings() {\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet title=\"Settings\" />\r\n\r\n      <Typography variant=\"h3\" gutterBottom display=\"inline\">\r\n        Settings\r\n      </Typography>\r\n\r\n      <Breadcrumbs aria-label=\"Breadcrumb\" mt={2}>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Dashboard\r\n        </Link>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Pages\r\n        </Link>\r\n        <Typography>Settings</Typography>\r\n      </Breadcrumbs>\r\n\r\n      <Divider my={6} />\r\n\r\n      <Grid container spacing={6}>\r\n        <Grid item xs={12}>\r\n          <Public />\r\n          <Private />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Settings;\r\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: PropTypes.oneOf(['circle', 'rounded', 'square'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z\"\n}), 'CloudUpload');"],"sourceRoot":""}