{"version":3,"sources":["pages/components/Tooltips.js"],"names":["NavLink","React","forwardRef","props","ref","innerRef","Card","styled","MuiCard","spacing","Divider","MuiDivider","Breadcrumbs","MuiBreadcrumbs","Paper","MuiPaper","IconButton","MuiIconButton","Button","MuiButton","SimpleTooltips","mb","variant","gutterBottom","mt","title","aria-label","mr","color","PositionedTooltips","container","justify","item","placement","m","xs","alignItems","direction","TriggersTooltips","state","open","handleTooltipClose","setState","handleTooltipOpen","disableFocusListener","disableHoverListener","disableTouchListener","onClickAway","this","PopperProps","disablePortal","onClose","onClick","Component","TransitionsTooltips","TransitionComponent","Fade","TransitionProps","timeout","Zoom","Tooltips","Fragment","display","component","exact","to","my","md"],"mappings":"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","file":"static/js/76.13c186bb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\r\n\r\nimport Helmet from 'react-helmet';\r\n\r\nimport {\r\n  CardContent,\r\n  ClickAwayListener,\r\n  Fab,\r\n  Fade,\r\n  Grid,\r\n  Link,\r\n  Breadcrumbs as MuiBreadcrumbs,\r\n  Button as MuiButton,\r\n  Card as MuiCard,\r\n  Divider as MuiDivider,\r\n  IconButton as MuiIconButton,\r\n  Paper as MuiPaper,\r\n  Tooltip,\r\n  Typography,\r\n  Zoom\r\n} from \"@material-ui/core\";\r\n\r\nimport { Add as AddIcon, Delete as DeleteIcon } from \"@material-ui/icons\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nconst NavLink = React.forwardRef((props, ref) => (\r\n  <RouterNavLink innerRef={ref} {...props} />\r\n));\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nconst Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\r\n\r\nconst Paper = styled(MuiPaper)(spacing);\r\n\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nfunction SimpleTooltips() {\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Simple Tooltips\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Tooltips display informative text when users hover over, focus on, or\r\n          tap an element.\r\n        </Typography>\r\n        <Paper mt={3}>\r\n          <Tooltip title=\"Delete\">\r\n            <IconButton aria-label=\"Delete\" mr={2}>\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Add\" aria-label=\"Add\">\r\n            <Fab color=\"primary\">\r\n              <AddIcon />\r\n            </Fab>\r\n          </Tooltip>\r\n        </Paper>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction PositionedTooltips() {\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Positioned Tooltips\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          The Tooltip has 12 placements choice. They donâ€™t have directional\r\n          arrows; instead, they rely on motion emanating from the source to\r\n          convey direction.\r\n        </Typography>\r\n        <Paper mt={3}>\r\n          <Grid container justify=\"center\">\r\n            <Grid item>\r\n              <Tooltip title=\"Add\" placement=\"top-start\">\r\n                <Button variant=\"contained\" color=\"secondary\" m={1}>\r\n                  top-start\r\n                </Button>\r\n              </Tooltip>\r\n              <Tooltip title=\"Add\" placement=\"top\">\r\n                <Button variant=\"contained\" color=\"secondary\" m={1}>\r\n                  top\r\n                </Button>\r\n              </Tooltip>\r\n              <Tooltip title=\"Add\" placement=\"top-end\">\r\n                <Button variant=\"contained\" color=\"secondary\" m={1}>\r\n                  top-end\r\n                </Button>\r\n              </Tooltip>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container justify=\"center\">\r\n            <Grid item xs={6}>\r\n              <Tooltip title=\"Add\" placement=\"left-start\">\r\n                <Button variant=\"contained\" color=\"secondary\" m={1}>\r\n                  left-start\r\n                </Button>\r\n              </Tooltip>\r\n              <br />\r\n              <Tooltip title=\"Add\" placement=\"left\">\r\n                <Button variant=\"contained\" color=\"secondary\" m={1}>\r\n                  left\r\n                </Button>\r\n              </Tooltip>\r\n              <br />\r\n              <Tooltip title=\"Add\" placement=\"left-end\">\r\n                <Button variant=\"contained\" color=\"secondary\" m={1}>\r\n                  left-end\r\n                </Button>\r\n              </Tooltip>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              container\r\n              xs={6}\r\n              alignItems=\"flex-end\"\r\n              direction=\"column\"\r\n              spacing={0}\r\n            >\r\n              <Grid item>\r\n                <Tooltip title=\"Add\" placement=\"right-start\">\r\n                  <Button variant=\"contained\" color=\"secondary\" m={1}>\r\n                    right-start\r\n                  </Button>\r\n                </Tooltip>\r\n              </Grid>\r\n              <Grid item>\r\n                <Tooltip title=\"Add\" placement=\"right\">\r\n                  <Button variant=\"contained\" color=\"secondary\" m={1}>\r\n                    right\r\n                  </Button>\r\n                </Tooltip>\r\n              </Grid>\r\n              <Grid item>\r\n                <Tooltip title=\"Add\" placement=\"right-end\">\r\n                  <Button variant=\"contained\" color=\"secondary\" m={1}>\r\n                    right-end\r\n                  </Button>\r\n                </Tooltip>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container justify=\"center\">\r\n            <Grid item>\r\n              <Tooltip title=\"Add\" placement=\"bottom-start\">\r\n                <Button variant=\"contained\" color=\"secondary\" m={1}>\r\n                  bottom-start\r\n                </Button>\r\n              </Tooltip>\r\n              <Tooltip title=\"Add\" placement=\"bottom\">\r\n                <Button variant=\"contained\" color=\"secondary\" m={1}>\r\n                  bottom\r\n                </Button>\r\n              </Tooltip>\r\n              <Tooltip title=\"Add\" placement=\"bottom-end\">\r\n                <Button variant=\"contained\" color=\"secondary\" m={1}>\r\n                  bottom-end\r\n                </Button>\r\n              </Tooltip>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nclass TriggersTooltips extends React.Component {\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  handleTooltipClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleTooltipOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card mb={6}>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Triggerable Tooltips\r\n          </Typography>\r\n          <Typography variant=\"body2\" gutterBottom>\r\n            You can define the types of events that cause a tooltip to show.\r\n          </Typography>\r\n          <Paper mt={3}>\r\n            <Grid container>\r\n              <Grid item>\r\n                <Tooltip disableFocusListener title=\"Add\">\r\n                  <Button variant=\"contained\" color=\"secondary\" mr={2}>\r\n                    Hover or touch\r\n                  </Button>\r\n                </Tooltip>\r\n              </Grid>\r\n              <Grid item>\r\n                <Tooltip disableHoverListener title=\"Add\">\r\n                  <Button variant=\"contained\" color=\"secondary\" mr={2}>\r\n                    Focus or touch\r\n                  </Button>\r\n                </Tooltip>\r\n              </Grid>\r\n              <Grid item>\r\n                <Tooltip disableFocusListener disableTouchListener title=\"Add\">\r\n                  <Button variant=\"contained\" color=\"secondary\" mr={2}>\r\n                    Hover\r\n                  </Button>\r\n                </Tooltip>\r\n              </Grid>\r\n              <Grid item>\r\n                <ClickAwayListener onClickAway={this.handleTooltipClose}>\r\n                  <div>\r\n                    <Tooltip\r\n                      PopperProps={{\r\n                        disablePortal: true\r\n                      }}\r\n                      onClose={this.handleTooltipClose}\r\n                      open={this.state.open}\r\n                      disableFocusListener\r\n                      disableHoverListener\r\n                      disableTouchListener\r\n                      title=\"Add\"\r\n                    >\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        mr={2}\r\n                        onClick={this.handleTooltipOpen}\r\n                      >\r\n                        Click\r\n                      </Button>\r\n                    </Tooltip>\r\n                  </div>\r\n                </ClickAwayListener>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nfunction TransitionsTooltips() {\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Simple Tooltips\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Tooltips display informative text when users hover over, focus on, or\r\n          tap an element.\r\n        </Typography>\r\n        <Paper mt={3}>\r\n          <Tooltip title=\"Add\">\r\n            <Button variant=\"contained\" color=\"secondary\" mr={2}>\r\n              Grow\r\n            </Button>\r\n          </Tooltip>\r\n          <Tooltip\r\n            TransitionComponent={Fade}\r\n            TransitionProps={{ timeout: 600 }}\r\n            title=\"Add\"\r\n          >\r\n            <Button variant=\"contained\" color=\"secondary\" mr={2}>\r\n              Fade\r\n            </Button>\r\n          </Tooltip>\r\n          <Tooltip TransitionComponent={Zoom} title=\"Add\">\r\n            <Button variant=\"contained\" color=\"secondary\" mr={2}>\r\n              Zoom\r\n            </Button>\r\n          </Tooltip>\r\n        </Paper>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction Tooltips() {\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet title=\"Tooltips\" />\r\n      <Typography variant=\"h3\" gutterBottom display=\"inline\">\r\n        Tooltips\r\n      </Typography>\r\n\r\n      <Breadcrumbs aria-label=\"Breadcrumb\" mt={2}>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Dashboard\r\n        </Link>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Components\r\n        </Link>\r\n        <Typography>Tooltips</Typography>\r\n      </Breadcrumbs>\r\n\r\n      <Divider my={6} />\r\n\r\n      <Grid container spacing={6}>\r\n        <Grid item xs={12} md={6}>\r\n          <SimpleTooltips />\r\n          <TriggersTooltips />\r\n          <TransitionsTooltips />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <PositionedTooltips />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Tooltips;\r\n"],"sourceRoot":""}