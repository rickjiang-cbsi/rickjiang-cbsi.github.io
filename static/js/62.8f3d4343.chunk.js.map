{"version":3,"sources":["pages/admin/Profiles/ProfileDetails/ActionParams.tsx","pages/admin/Profiles/ProfileDetails/index.tsx","apis.tsx"],"names":["ActionParams","actions","selectedAction","classes","newAction","useStyles","style","marginTop","TableContainer","Table","width","TableHead","backgroundColor","color","TableRow","TableCell","key","align","className","tableCell","Typography","fontWeight","TableBody","Object","keys","params","map","elm","index","TextField","id","autoComplete","autoCorrect","spellCheck","variant","value","inputProps","margin","padding","selector","state","profilesPage","NavLink","React","forwardRef","props","ref","innerRef","Card","styled","MuiCard","spacing","Divider","MuiDivider","Breadcrumbs","MuiBreadcrumbs","makeStyles","theme","createStyles","tableHead","listItems","paddingBottom","marginBottom","borderRight","textAlign","hovered","ProfileTableCard","useSelector","profileActions","profileName","useParams","dispatch","useDispatch","useState","name","setName","setActions","setSelectedAction","selectedIndex","setSelectedIndex","history","useHistory","useEffect","api","GET_PROFILE_DATA","body","fetch","method","headers","qs","stringify","then","response","json","data","updateProfileActions","console","log","deleteAction","result","filter","i","selected","mb","CardContent","size","onChange","event","target","length","actionSet","Set","forEach","add","description","uniqueActions","Fragment","display","overflowX","whiteSpace","aria-labelledby","tabIndex","hover","textTransform","mt","Grid","container","item","xs","List","dense","ListItem","border","button","onClick","ListItemSecondaryAction","IconButton","edge","aria-label","CardActions","Button","flexDirection","justifyContent","push","dataToSubmit","profile_id","profile_name","pos","JSON","SAVE_PROFILE","substr","ProfileDetails","Helmet","title","gutterBottom","Link","component","exact","to","my","GET_ACTIONS","SAVE_ACTION","DELETE_ACTION","GET_PROFILES","CLONE_PROFILE","DELETE_PROFILE"],"mappings":"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","file":"static/js/62.8f3d4343.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport {\n  Table,\n  TableContainer,\n  TableBody,\n  TableCell,\n  TableRow,\n  TableHead,\n  Typography,\n  TextField,\n} from \"@material-ui/core\";\nimport { actionParam } from \"../../../../redux/reducers/profilesPage\";\nimport { useStyles } from \"./index\";\n\ninterface Props {\n  actions: any[];\n  selectedAction: actionParam;\n  newAction: boolean;\n}\n\nconst ActionParams: React.FC<Props> = ({\n  actions,\n  selectedAction,\n  newAction,\n}) => {\n  const classes = useStyles();\n  return (\n    <div style={{ marginTop: \"10px\" }}>\n      <TableContainer>\n        <Table>\n          <colgroup>\n            <col style={{ width: \"45%\" }} />\n            <col style={{ width: \"55%\" }} />\n          </colgroup>\n          <TableHead style={{ backgroundColor: \"#2A7AB0\", color: \"white\" }}>\n            <TableRow>\n              <TableCell\n                key=\"parameter\"\n                align=\"center\"\n                className={classes.tableCell}\n              >\n                <Typography style={{ color: \"white\", fontWeight: \"bold\" }}>\n                  Parameter\n                </Typography>\n              </TableCell>\n              <TableCell\n                key=\"value\"\n                align=\"center\"\n                className={classes.tableCell}\n              >\n                <Typography style={{ color: \"white\", fontWeight: \"bold\" }}>\n                  Value\n                </Typography>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {selectedAction &&\n              Object.keys(selectedAction.params).map(\n                (elm: any, index: number) => {\n                  return (\n                    <TableRow key={\"params-\" + index}>\n                      <TableCell className={classes.tableCell}>\n                        <Typography>{elm}</Typography>\n                      </TableCell>\n                      <TableCell className={classes.tableCell}>\n                        <TextField\n                          id={\"filter-\" + index}\n                          autoComplete=\"off\"\n                          autoCorrect=\"off\"\n                          spellCheck=\"false\"\n                          variant=\"outlined\"\n                          value={selectedAction.params[elm] || \"\"}\n                          inputProps={{\n                            style: {\n                              margin: \"auto\",\n                              width: \"33ch\",\n                              padding: \"8px 10px 7px \",\n                            },\n                          }}\n                        />\n                      </TableCell>\n                    </TableRow>\n                  );\n                }\n              )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default ActionParams;\n\n// export {}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { NavLink as RouterNavLink, useParams } from \"react-router-dom\";\n\nimport { Helmet } from \"react-helmet\";\nimport {\n  CardContent,\n  Grid,\n  Link,\n  Breadcrumbs as MuiBreadcrumbs,\n  Card as MuiCard,\n  Divider as MuiDivider,\n  Typography,\n  Table,\n  TableContainer,\n  TableRow,\n  TableBody,\n  TableHead,\n  TableCell,\n  createStyles,\n  Theme,\n  TextField,\n  Button,\n  Divider as TableDivider,\n  CardActions,\n  List,\n  ListItemText,\n  ListItem,\n  ListItemSecondaryAction,\n  IconButton,\n} from \"@material-ui/core\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport { spacing } from \"@material-ui/system\";\nimport ActionParams from \"./ActionParams\";\nimport {\n  updateProfileActions,\n  updateProfileName,\n} from \"../../../../redux/reducers/profilesPage\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../../../redux/reducers\";\n\nimport qs from \"qs\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { useHistory } from \"react-router-dom\";\nimport { actionParam } from \"../../../../redux/reducers/profilesPage\";\nimport { GET_PROFILE_DATA, SAVE_PROFILE } from \"../../../../apis\";\n\nconst selector = (state: RootState) => {\n  return state.profilesPage;\n};\n\nconst NavLink = React.forwardRef((props: any, ref: any) => (\n  <RouterNavLink innerRef={ref} {...props} />\n));\n\nconst Card = styled(MuiCard)(spacing);\n\nconst Divider = styled(MuiDivider)(spacing);\n\nconst Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    tableHead: {\n      backgroundColor: \"#2A7AB0\",\n      //   color: \"#ffffff\",\n    },\n    listItems: {\n      paddingBottom: \"10px\",\n      marginBottom: \"5px\",\n    },\n    tableCell: {\n      padding: \"5px\",\n      borderRight: \"0.5px solid lightgrey\",\n      textAlign: \"center\",\n    },\n    hovered: {\n      backgroundColor: \"rgba(0, 0, 0, 0.1)\",\n    },\n  })\n);\n\nfunction ProfileTableCard() {\n  const { profileName, profileActions } = useSelector(selector);\n  const classes = useStyles();\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [actions, setActions] = useState<actionParam[]>([]);\n  const [selectedAction, setSelectedAction] = useState<actionParam>(actions[0]);\n  const [newAction, setNewAction] = useState(false);\n  const [selectedIndex, setSelectedIndex] = useState<number>(0);\n\n  const history = useHistory();\n  useEffect(() => {\n    const api = GET_PROFILE_DATA;\n    const body = {\n      id: id,\n    };\n    fetch(api, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\n      },\n      body: qs.stringify(body),\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        setName(data.profileName);\n        setActions(data.actions);\n        setSelectedAction(data.actions[0]);\n        setSelectedIndex(0);\n        // dispatch(updateProfileName(data.profileName));\n        dispatch(updateProfileActions(data.actions));\n        console.log(data.actions);\n      });\n  }, [id, dispatch]);\n\n  useEffect(() => {\n    setActions(profileActions);\n  }, [profileActions]);\n\n  const uniqueActions = () => {\n    let actionSet = new Set();\n    actions.forEach((elm: any, index: number) => {\n      actionSet.add(elm.description);\n    });\n    return actionSet;\n  };\n\n  const deleteAction = (index: number) => () => {\n    let result = profileActions.filter((elm: any, i: number) => {\n      return i !== index;\n    });\n    dispatch(updateProfileActions(result));\n    let i = index - 1 < 0 ? index : index - 1;\n    let selected = result[i];\n    setSelectedAction(selected);\n    setSelectedIndex(i);\n  };\n\n  const handleSaveProfile = () => {\n    let dataToSubmit = {\n      data: [\n        {\n          profile_id: id,\n        },\n        { profile_name: name },\n      ],\n    };\n    profileActions.forEach((elm: any, index: number) => {\n      elm = { ...elm, pos: index };\n      dataToSubmit.data.push(elm);\n    });\n    let data = JSON.stringify(dataToSubmit);\n    // begin saving profile details\n    const api = SAVE_PROFILE;\n    fetch(api, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\n      },\n      body: data.substr(1, data.length - 1),\n    });\n  };\n\n  const handleChangeName = (event: any) => {\n    const name = event.target.value;\n    setName(name);\n  };\n  return (\n    <>\n      <Card mb={6}>\n        <CardContent>\n          <Typography variant=\"h6\">Profile Name:</Typography>\n          <TextField\n            value={name}\n            // defaultValue={name}\n            style={{ width: \"70vh\", marginTop: \"5px\" }}\n            variant=\"outlined\"\n            size=\"small\"\n            onChange={handleChangeName}\n          ></TextField>\n        </CardContent>\n      </Card>\n      <Card mb={6}>\n        <CardContent>\n          <Typography variant=\"h6\" style={{ marginBottom: \"5px\" }}>\n            Actions:\n          </Typography>\n\n          {actions.length > 0 && console.log(uniqueActions())}\n          {actions.length > 0\n            ? actions.map((elm: any, index: number) => {\n                return (\n                  <React.Fragment key={index}>\n                    <TableContainer\n                      style={{\n                        width: \"87vw\",\n                        display: \"block\",\n                        overflowX: \"auto\",\n                        whiteSpace: \"nowrap\",\n                        //   margin: \"5px\",\n                      }}\n                    >\n                      <Table aria-labelledby=\"tableTitle\" size=\"medium\">\n                        <colgroup>\n                          <col width={\"5%\"} />\n                          {Object.keys(elm.params).map(\n                            (elm: any, index: number) => {\n                              return <col key={index} width={\"5%\"} />;\n                            }\n                          )}\n                        </colgroup>\n                        <TableHead className={classes.tableHead}>\n                          <TableRow>\n                            <TableCell\n                              key={\"description\"}\n                              align=\"center\"\n                              className={classes.tableCell}\n                            >\n                              <Typography style={{ color: \"white\" }}>\n                                Action\n                              </Typography>\n                            </TableCell>\n\n                            {Object.keys(elm.params).map(\n                              (key: any, index: number) => {\n                                // if (elm.params[key] == null) return <></>;\n                                return (\n                                  <TableCell\n                                    className={classes.tableCell}\n                                    key={index}\n                                  >\n                                    <Typography\n                                      style={{\n                                        // textTransform: \"capitalize\",\n                                        color: \"white\",\n                                      }}\n                                    >\n                                      {key}\n                                    </Typography>\n                                  </TableCell>\n                                );\n                              }\n                            )}\n                          </TableRow>\n                        </TableHead>\n\n                        <TableBody>\n                          <TableRow tabIndex={-1} hover>\n                            <TableCell\n                              key={\"description\"}\n                              align=\"center\"\n                              className={classes.tableCell}\n                            >\n                              <Typography>\n                                <strong>{elm.description}</strong>\n                              </Typography>\n                            </TableCell>\n                            {Object.keys(elm.params).map(\n                              (key: any, index: number) => {\n                                return (\n                                  <TableCell\n                                    className={classes.tableCell}\n                                    key={index}\n                                  >\n                                    <Typography\n                                      style={{ textTransform: \"capitalize\" }}\n                                    >\n                                      {elm.params[key]}\n                                    </Typography>\n                                  </TableCell>\n                                );\n                              }\n                            )}\n                          </TableRow>\n                        </TableBody>\n                      </Table>\n                    </TableContainer>\n                    <Divider mt={10} mb={10}></Divider>\n                    {/* <TableDivider style={{ marginTop: \"20px\" }} /> */}\n                  </React.Fragment>\n                );\n              })\n            : \"\"}\n        </CardContent>\n      </Card>\n      <Grid container spacing={6}>\n        <Grid item xs={6} style={{ width: \"30vw\" }}>\n          <Card mb={6}>\n            <CardContent>\n              <Typography variant=\"h6\" style={{ marginBottom: \"5px\" }}>\n                Edit Actions:\n              </Typography>\n              <List dense={true}>\n                {actions.length === 0 ? (\n                  <Typography>No actions found</Typography>\n                ) : (\n                  actions.map((elm: any, index: number) => {\n                    return (\n                      <ListItem\n                        key={\"actions-\" + index}\n                        style={{\n                          border: \"1px solid\",\n                          // cursor: \"pointer\",\n                          // backgroundColor: \"#2A7AB0\",\n                          // color: \"white\",\n                        }}\n                        button\n                        onClick={() => {\n                          console.log(elm);\n\n                          setSelectedAction(elm);\n                          setSelectedIndex(index);\n                        }}\n                        className={\n                          (classes.listItems,\n                          selectedAction\n                            ? index === selectedIndex\n                              ? classes.hovered\n                              : \"\"\n                            : \"\")\n                        }\n                      >\n                        <Typography>{`${index + 1}. ${\n                          elm.description\n                        }`}</Typography>\n                        <ListItemSecondaryAction>\n                          <IconButton\n                            edge=\"end\"\n                            aria-label=\"delete\"\n                            color=\"default\"\n                            onClick={deleteAction(index)}\n                          >\n                            <DeleteIcon color=\"inherit\" />\n                          </IconButton>\n                        </ListItemSecondaryAction>\n                      </ListItem>\n                    );\n                  })\n                )}\n              </List>\n              <CardActions>\n                <Button size=\"small\" color=\"primary\">\n                  Add an Action\n                </Button>\n              </CardActions>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={6} style={{ width: \"30vw\" }}>\n          <Card mb={6}>\n            <CardContent>\n              <Typography variant=\"h6\" style={{ marginBottom: \"5px\" }}>\n                Parameter for action:\n                {selectedAction\n                  ? ` #${selectedIndex + 1}. ${selectedAction.description}`\n                  : \"\"}\n              </Typography>\n\n              <ActionParams\n                actions={actions}\n                selectedAction={selectedAction}\n                newAction={newAction}\n              />\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n      <Card mb={0}>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <div>{}</div>\n          <aside>\n            <CardActions>\n              <Button\n                size=\"small\"\n                color=\"primary\"\n                onClick={() => history.push(\"/admin/profiles\")}\n              >\n                Cancel Changes\n              </Button>\n              <Button\n                size=\"small\"\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={handleSaveProfile}\n              >\n                Save Profile\n              </Button>\n            </CardActions>\n          </aside>\n        </div>\n      </Card>\n    </>\n  );\n}\n\nfunction ProfileDetails() {\n  const { profileName } = useSelector(selector);\n  const dispatch = useDispatch();\n\n  return (\n    <React.Fragment>\n      <Helmet title=\"Edit Profile\" />\n      <Typography variant=\"h3\" gutterBottom display=\"inline\">\n        Edit Profile\n      </Typography>\n\n      <Breadcrumbs aria-label=\"Breadcrumb\" mt={2}>\n        <Link component={NavLink} exact to=\"/\">\n          Admin\n        </Link>\n        <Link component={NavLink} to=\"/admin/profiles\">\n          Profiles\n        </Link>\n        <Typography>Edit Profile</Typography>\n      </Breadcrumbs>\n\n      <Divider my={6} />\n\n      <Grid container spacing={6}>\n        <Grid item xs={12}>\n          <ProfileTableCard />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default ProfileDetails;\n","export const GET_ACTIONS =\n  \"https://localhost/pages/resources/ajax/actions/get_actions.php\";\nexport const ADD_ACTION =\n  \"https://localhost/pages/resources/ajax/actions/save_action.php\";\nexport const SAVE_ACTION =\n  \"https://localhost/pages/resources/ajax/actions/save_action.php\";\nexport const DELETE_ACTION =\n  \"https://localhost/pages/resources/ajax/actions/delete_action.php\";\n\nexport const GET_PROFILES =\n  \"https://localhost/pages/resources/ajax/profiles/get_profiles.php\";\nexport const CLONE_PROFILE =\n  \"https://localhost/pages/resources/ajax/profiles/clone_profile.php\";\nexport const DELETE_PROFILE =\n  \"https://localhost/pages/resources/ajax/profiles/delete_profile.php\";\nexport const GET_PROFILE_DATA =\n  \"https://localhost/pages/resources/ajax/profiles/get_profile_data.php\";\nexport const SAVE_PROFILE =\n  \"https://localhost/pages/resources/ajax/profiles/save_profile.php\";\n"],"sourceRoot":""}