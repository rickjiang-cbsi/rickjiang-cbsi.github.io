{"version":3,"sources":["pages/pages/Orders.js"],"names":["NavLink","React","forwardRef","props","ref","innerRef","Divider","styled","MuiDivider","spacing","Breadcrumbs","MuiBreadcrumbs","Paper","MuiPaper","Chip","MuiChip","shipped","green","processing","orange","cancelled","red","theme","palette","common","white","Spacer","div","ToolbarTitle","createData","id","product","date","total","status","method","rows","descendingComparator","a","b","orderBy","headCells","alignment","label","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","padding","indeterminate","checked","onChange","inputProps","map","headCell","key","align","disablePadding","sortDirection","active","direction","onClick","property","event","EnhancedTableToolbar","color","variant","title","aria-label","EnhancedTable","useState","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","aria-labelledby","size","target","newSelecteds","n","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","row","isItemSelected","indexOf","labelId","hover","role","aria-checked","tabIndex","selectedIndex","newSelected","concat","handleClick","mr","mb","style","height","colSpan","rowsPerPageOptions","component","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","value","OrderList","Fragment","justify","container","item","gutterBottom","display","mt","exact","to","my","xs"],"mappings":"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","file":"static/js/89.13fe8582.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\r\n\r\nimport Helmet from 'react-helmet';\r\n\r\nimport {\r\n  Box,\r\n  Breadcrumbs as MuiBreadcrumbs,\r\n  Button,\r\n  Checkbox,\r\n  Chip as MuiChip,\r\n  Divider as MuiDivider,\r\n  Grid,\r\n  IconButton,\r\n  Link,\r\n  Paper as MuiPaper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TableSortLabel,\r\n  Toolbar,\r\n  Tooltip,\r\n  Typography\r\n} from \"@material-ui/core\";\r\n\r\nimport { green, orange, red } from \"@material-ui/core/colors\";\r\n\r\nimport {\r\n  Add as AddIcon,\r\n  Archive as ArchiveIcon,\r\n  FilterList as FilterListIcon,\r\n  RemoveRedEye as RemoveRedEyeIcon\r\n} from \"@material-ui/icons\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nconst NavLink = React.forwardRef((props, ref) => (\r\n  <RouterNavLink innerRef={ref} {...props} />\r\n));\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nconst Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\r\n\r\nconst Paper = styled(MuiPaper)(spacing);\r\n\r\nconst Chip = styled(MuiChip)`\r\n  ${spacing};\r\n\r\n  background: ${props => props.shipped && green[500]};\r\n  background: ${props => props.processing && orange[700]};\r\n  background: ${props => props.cancelled && red[500]};\r\n  color: ${props => props.theme.palette.common.white};\r\n`\r\n\r\nconst Spacer = styled.div`\r\n  flex: 1 1 100%;\r\n`;\r\n\r\nconst ToolbarTitle = styled.div`\r\n  min-width: 150px;\r\n`;\r\n\r\nfunction createData(id, product, date, total, status, method) {\r\n  return { id, product, date, total, status, method };\r\n}\r\n\r\nconst rows = [\r\n  createData('000253', 'Salt & Pepper Grinder', '2020-01-02', '$32,00', 0, 'Visa'),\r\n  createData('000254', 'Backpack', '2020-01-04', '$130,00', 0, 'PayPal'),\r\n  createData('000255', 'Pocket Speaker', '2020-01-04', '$80,00', 2, 'Mastercard'),\r\n  createData('000256', 'Glass Teapot', '2020-01-08', '$45,00', 0, 'Visa'),\r\n  createData('000257', 'Unbreakable Water Bottle', '2020-01-09', '$40,00', 0, 'PayPal'),\r\n  createData('000258', 'Spoon Saver', '2020-01-14', '$15,00', 0, 'Mastercard'),\r\n  createData('000259', 'Hip Flash', '2020-01-16', '$25,00', 1, 'Visa'),\r\n  createData('000260', 'Woven Slippers', '2020-01-22', '$20,00', 0, 'PayPal'),\r\n  createData('000261', 'Womens Watch', '2020-01-22', '$65,00', 2, 'Visa'),\r\n  createData('000262', 'Over-Ear Headphones', '2020-01-23', '$210,00', 0, 'Mastercard'),\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'id', alignment: 'right', label: 'Order ID' },\r\n  { id: 'product', alignment: 'left', label: 'Product' },\r\n  { id: 'date', alignment: 'left', label: 'Date' },\r\n  { id: 'total', alignment: 'right', label: 'Total' },\r\n  { id: 'status', alignment: 'left', label: 'Status' },\r\n  { id: 'method', alignment: 'left', label: 'Payment Method' },\r\n  { id: 'actions', alignment: 'right', label: 'Actions' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.alignment}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nlet EnhancedTableToolbar = props => {\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar>\r\n      <ToolbarTitle>\r\n        {numSelected > 0 ? (\r\n          <Typography color=\"inherit\" variant=\"subtitle1\">\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : (\r\n          <Typography variant=\"h6\" id=\"tableTitle\">\r\n            Orders\r\n          </Typography>\r\n        )}\r\n      </ToolbarTitle>\r\n      <Spacer />\r\n      <div>\r\n        {numSelected > 0 ? (\r\n          <Tooltip title=\"Delete\">\r\n            <IconButton aria-label=\"Delete\">\r\n              <ArchiveIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"Filter list\">\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nfunction EnhancedTable() {\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('customer');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.id);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, id) => {\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n  \r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n  \r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (id) => selected.indexOf(id) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div>\r\n      <Paper>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            aria-labelledby=\"tableTitle\"\r\n            size={'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.id);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={`${row.id}-${index}`}\r\n                      selected={isItemSelected}\r\n                      >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                          onClick={(event) => handleClick(event, row.id)}\r\n                        />\r\n                      </TableCell>\r\n\r\n                      <TableCell align=\"right\">#{row.id}</TableCell>\r\n                      <TableCell align=\"left\">{row.product}</TableCell>\r\n                      <TableCell align=\"left\">{row.date}</TableCell>\r\n                      <TableCell align=\"right\">{row.total}</TableCell>\r\n                      <TableCell>\r\n                        {row.status === 0 && <Chip size=\"small\" mr={1} mb={1} label=\"Shipped\" shipped />}\r\n                        {row.status === 1 && <Chip size=\"small\" mr={1} mb={1} label=\"Processing\" processing />}\r\n                        {row.status === 2 && <Chip size=\"small\" mr={1} mb={1} label=\"Cancelled\" cancelled />}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">{row.method}</TableCell>\r\n                      <TableCell padding=\"none\" align=\"right\">\r\n                        <Box mr={2}>\r\n                          <IconButton aria-label=\"delete\">\r\n                            <ArchiveIcon />\r\n                          </IconButton>  \r\n                          <IconButton aria-label=\"details\">\r\n                            <RemoveRedEyeIcon />\r\n                          </IconButton>  \r\n                        </Box>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (53) * emptyRows }}>\r\n                  <TableCell colSpan={8} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction OrderList() {\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet title=\"Orders\" />\r\n\r\n      <Grid\r\n        justify=\"space-between\"\r\n        container \r\n        spacing={24}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h3\" gutterBottom display=\"inline\">\r\n          Orders\r\n          </Typography>\r\n\r\n          <Breadcrumbs aria-label=\"Breadcrumb\" mt={2}>\r\n            <Link component={NavLink} exact to=\"/\">\r\n              Dashboard\r\n            </Link>\r\n            <Link component={NavLink} exact to=\"/\">\r\n              Pages\r\n            </Link>\r\n            <Typography>Orders</Typography>\r\n          </Breadcrumbs>\r\n        </Grid>\r\n        <Grid item>\r\n          <div>\r\n            <Button variant=\"contained\" color=\"primary\">\r\n              <AddIcon />\r\n              New Order\r\n            </Button>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Divider my={6} />\r\n\r\n      <Grid container spacing={6}>\r\n        <Grid item xs={12}>\r\n          <EnhancedTable />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default OrderList;\r\n"],"sourceRoot":""}