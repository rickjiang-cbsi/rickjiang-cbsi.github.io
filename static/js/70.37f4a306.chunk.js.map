{"version":3,"sources":["pages/components/Dialogs.js"],"names":["NavLink","React","forwardRef","props","ref","innerRef","Card","styled","MuiCard","spacing","Divider","MuiDivider","Breadcrumbs","MuiBreadcrumbs","Paper","MuiPaper","emails","SimpleDialog","handleClose","onClose","selectedValue","handleListItemClick","value","this","other","classes","aria-labelledby","open","id","map","email","button","onClick","key","primary","Component","SimpleDialogDemo","state","handleClickOpen","setState","mb","variant","gutterBottom","mt","color","AlertDialog","aria-describedby","autoFocus","MaxWidthDialog","fullWidth","maxWidth","handleMaxWidthChange","event","target","handleFullWidthChange","checked","Fragment","noValidate","htmlFor","onChange","inputProps","name","control","label","FormDialog","margin","type","Dialogs","title","display","aria-label","component","exact","to","my","container","item","xs","md"],"mappings":"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","file":"static/js/70.37f4a306.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\r\n\r\nimport Helmet from 'react-helmet';\r\n\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CardContent,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Grid,\r\n  InputLabel,\r\n  Link,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  MenuItem,\r\n  Breadcrumbs as MuiBreadcrumbs,\r\n  Card as MuiCard,\r\n  Divider as MuiDivider,\r\n  Paper as MuiPaper,\r\n  Select,\r\n  Switch,\r\n  TextField,\r\n  Typography\r\n} from \"@material-ui/core\";\r\n\r\nimport { Add as AddIcon, Person as PersonIcon } from \"@material-ui/icons\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nconst NavLink = React.forwardRef((props, ref) => (\r\n  <RouterNavLink innerRef={ref} {...props} />\r\n));\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nconst Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\r\n\r\nconst Paper = styled(MuiPaper)(spacing);\r\n\r\nconst emails = [\"username@gmail.com\", \"user02@gmail.com\"];\r\n\r\nclass SimpleDialog extends React.Component {\r\n  handleClose = () => {\r\n    this.props.onClose(this.props.selectedValue);\r\n  };\r\n\r\n  handleListItemClick = value => {\r\n    this.props.onClose(value);\r\n  };\r\n\r\n  render() {\r\n    const { classes, onClose, selectedValue, ...other } = this.props;\r\n\r\n    return (\r\n      <Dialog\r\n        onClose={this.handleClose}\r\n        aria-labelledby=\"simple-dialog-title\"\r\n        open={true}\r\n        {...other}\r\n      >\r\n        <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\r\n        <div>\r\n          <List>\r\n            {emails.map(email => (\r\n              <ListItem\r\n                button\r\n                onClick={() => this.handleListItemClick(email)}\r\n                key={email}\r\n              >\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <PersonIcon />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText primary={email} />\r\n              </ListItem>\r\n            ))}\r\n            <ListItem\r\n              button\r\n              onClick={() => this.handleListItemClick(\"addAccount\")}\r\n            >\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <AddIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText primary=\"add account\" />\r\n            </ListItem>\r\n          </List>\r\n        </div>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nclass SimpleDialogDemo extends React.Component {\r\n  state = {\r\n    open: false,\r\n    selectedValue: emails[1]\r\n  };\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({\r\n      open: true\r\n    });\r\n  };\r\n\r\n  handleClose = value => {\r\n    this.setState({ selectedValue: value, open: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card mb={6}>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Simple Dialogs\r\n          </Typography>\r\n          <Typography variant=\"body2\" gutterBottom>\r\n            Simple dialogs can provide additional details or actions about a\r\n            list item.\r\n          </Typography>\r\n\r\n          <Paper mt={4}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={this.handleClickOpen}\r\n            >\r\n              Open simple dialog\r\n            </Button>\r\n            <SimpleDialog\r\n              selectedValue={this.state.selectedValue}\r\n              open={this.state.open}\r\n              onClose={this.handleClose}\r\n            />\r\n            <Paper mt={2}>\r\n              <Typography variant=\"body2\">\r\n                Selected: {this.state.selectedValue}\r\n              </Typography>\r\n            </Paper>\r\n          </Paper>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nclass AlertDialog extends React.Component {\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card mb={6}>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Alerts\r\n          </Typography>\r\n          <Typography variant=\"body2\" gutterBottom>\r\n            Alerts are urgent interruptions, requiring acknowledgement, that\r\n            inform the user about a situation.\r\n          </Typography>\r\n\r\n          <Paper mt={4}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={this.handleClickOpen}\r\n            >\r\n              Open alert dialog\r\n            </Button>\r\n            <Dialog\r\n              open={this.state.open}\r\n              onClose={this.handleClose}\r\n              aria-labelledby=\"alert-dialog-title\"\r\n              aria-describedby=\"alert-dialog-description\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Use Google's location service?\"}\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                  Let Google help apps determine location. This means sending\r\n                  anonymous location data to Google, even when no apps are\r\n                  running.\r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={this.handleClose} color=\"primary\">\r\n                  Disagree\r\n                </Button>\r\n                <Button onClick={this.handleClose} color=\"primary\" autoFocus>\r\n                  Agree\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </Paper>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nclass MaxWidthDialog extends React.Component {\r\n  state = {\r\n    open: false,\r\n    fullWidth: true,\r\n    maxWidth: \"sm\"\r\n  };\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleMaxWidthChange = event => {\r\n    this.setState({ maxWidth: event.target.value });\r\n  };\r\n\r\n  handleFullWidthChange = event => {\r\n    this.setState({ fullWidth: event.target.checked });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card mb={6}>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Simple Dialogs\r\n          </Typography>\r\n          <Typography variant=\"body2\" gutterBottom>\r\n            Simple dialogs can provide additional details or actions about a\r\n            list item.\r\n          </Typography>\r\n\r\n          <Paper mt={4}>\r\n            <React.Fragment>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.handleClickOpen}\r\n              >\r\n                Open max-width dialog\r\n              </Button>\r\n              <Dialog\r\n                fullWidth={this.state.fullWidth}\r\n                maxWidth={this.state.maxWidth}\r\n                open={this.state.open}\r\n                onClose={this.handleClose}\r\n                aria-labelledby=\"max-width-dialog-title\"\r\n              >\r\n                <DialogTitle id=\"max-width-dialog-title\">\r\n                  Optional sizes\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText>\r\n                    You can set my maximum width and whether to adapt or not.\r\n                  </DialogContentText>\r\n                  <form noValidate>\r\n                    <FormControl>\r\n                      <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\r\n                      <Select\r\n                        value={this.state.maxWidth}\r\n                        onChange={this.handleMaxWidthChange}\r\n                        inputProps={{\r\n                          name: \"max-width\",\r\n                          id: \"max-width\"\r\n                        }}\r\n                      >\r\n                        <MenuItem value={false}>false</MenuItem>\r\n                        <MenuItem value=\"xs\">xs</MenuItem>\r\n                        <MenuItem value=\"sm\">sm</MenuItem>\r\n                        <MenuItem value=\"md\">md</MenuItem>\r\n                        <MenuItem value=\"lg\">lg</MenuItem>\r\n                        <MenuItem value=\"xl\">xl</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </form>\r\n                  <form>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Switch\r\n                          checked={this.state.fullWidth}\r\n                          onChange={this.handleFullWidthChange}\r\n                          value=\"fullWidth\"\r\n                        />\r\n                      }\r\n                      label=\"Full width\"\r\n                    />\r\n                  </form>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={this.handleClose} color=\"primary\">\r\n                    Close\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </React.Fragment>\r\n          </Paper>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nclass FormDialog extends React.Component {\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card mb={6}>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Form Dialogs\r\n          </Typography>\r\n          <Typography variant=\"body2\" gutterBottom>\r\n            Form dialogs allow users to fill out form fields within a dialog.\r\n          </Typography>\r\n\r\n          <Paper mt={4}>\r\n            <div>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.handleClickOpen}\r\n              >\r\n                Open form dialog\r\n              </Button>\r\n              <Dialog\r\n                open={this.state.open}\r\n                onClose={this.handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n              >\r\n                <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText>\r\n                    To subscribe to this website, please enter your email\r\n                    address here. We will send updates occasionally.\r\n                  </DialogContentText>\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Email Address\"\r\n                    type=\"email\"\r\n                    fullWidth\r\n                  />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={this.handleClose} color=\"primary\">\r\n                    Cancel\r\n                  </Button>\r\n                  <Button onClick={this.handleClose} color=\"primary\">\r\n                    Subscribe\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </div>\r\n          </Paper>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Dialogs() {\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet title=\"Dialogs\" />\r\n      <Typography variant=\"h3\" gutterBottom display=\"inline\">\r\n        Dialogs\r\n      </Typography>\r\n\r\n      <Breadcrumbs aria-label=\"Breadcrumb\" mt={2}>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Dashboard\r\n        </Link>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Components\r\n        </Link>\r\n        <Typography>Dialogs</Typography>\r\n      </Breadcrumbs>\r\n\r\n      <Divider my={6} />\r\n\r\n      <Grid container spacing={6}>\r\n        <Grid item xs={12} md={6}>\r\n          <SimpleDialogDemo />\r\n          <AlertDialog />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <MaxWidthDialog />\r\n          <FormDialog />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Dialogs;\r\n"],"sourceRoot":""}