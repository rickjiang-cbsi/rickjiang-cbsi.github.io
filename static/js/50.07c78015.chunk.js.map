{"version":3,"sources":["pages/pages/Blank.js","../node_modules/@material-ui/core/esm/utils/createSvgIcon.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/Divider/Divider.js","../node_modules/@material-ui/core/esm/Link/Link.js","../node_modules/@material-ui/core/esm/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js"],"names":["NavLink","React","forwardRef","props","ref","innerRef","Card","styled","MuiCard","spacing","Divider","MuiDivider","Breadcrumbs","MuiBreadcrumbs","EmptyCard","mb","variant","gutterBottom","Blank","Fragment","title","display","aria-label","mt","component","exact","to","my","container","item","xs","createSvgIcon","path","displayName","Component","memo","createElement","SvgIcon","_extends","muiName","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","clsx","root","elevation","withStyles","overflow","name","CardContent","_props$component","padding","paddingBottom","_props$absolute","absolute","_props$flexItem","flexItem","_props$light","light","_props$orientation","orientation","_props$role","role","undefined","_props$variant","vertical","theme","height","margin","border","flexShrink","backgroundColor","palette","divider","position","bottom","left","width","inset","marginLeft","fade","middle","marginRight","alignSelf","Link","_props$color","color","onBlur","onFocus","TypographyClasses","_props$underline","underline","_useIsFocusVisible","useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState","focusVisible","setFocusVisible","handlerRef","useForkRef","Typography","concat","capitalize","button","event","underlineNone","textDecoration","underlineHover","underlineAlways","WebkitTapHighlightColor","outline","borderRadius","cursor","userSelect","verticalAlign","borderStyle","d","grey","boxShadow","shadows","emphasize","icon","ButtonBase","focusRipple","MoreHorizIcon","children","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","separator","expanded","setExpanded","allItems","toArray","filter","child","map","index","li","key","ol","items","reduce","acc","current","length","push","insertSeparators","_toConsumableArray","slice","BreadcrumbCollapsed","onClick","focusable","currentTarget","parentNode","querySelector","focus","renderItemsBeforeAndAfter","flexWrap","alignItems","listStyle"],"mappings":"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","file":"static/js/50.07c78015.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\r\n\r\nimport Helmet from 'react-helmet';\r\n\r\nimport {\r\n  CardContent,\r\n  Grid,\r\n  Link,\r\n  Breadcrumbs as MuiBreadcrumbs,\r\n  Card as MuiCard,\r\n  Divider as MuiDivider,\r\n  Typography\r\n} from \"@material-ui/core\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nconst NavLink = React.forwardRef((props, ref) => (\r\n  <RouterNavLink innerRef={ref} {...props} />\r\n));\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nconst Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\r\n\r\nfunction EmptyCard() {\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Empty card\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Empty card\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction Blank() {\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet title=\"Blank\" />\r\n      <Typography variant=\"h3\" gutterBottom display=\"inline\">\r\n        Blank\r\n      </Typography>\r\n\r\n      <Breadcrumbs aria-label=\"Breadcrumb\" mt={2}>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Dashboard\r\n        </Link>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Pages\r\n        </Link>\r\n        <Typography>Blank</Typography>\r\n      </Breadcrumbs>\r\n\r\n      <Divider my={6} />\r\n\r\n      <Grid container spacing={6}>\r\n        <Grid item xs={12}>\r\n          <EmptyCard />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Blank;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '../SvgIcon';\n/**\n * Private module reserved for @material-ui/x packages.\n */\n\nexport default function createSvgIcon(path, displayName) {\n  var Component = React.memo(React.forwardRef(function (props, ref) {\n    return /*#__PURE__*/React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return Component;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 1,\n      margin: 0,\n      // Reset browser default style.\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      backgroundColor: fade(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      width: 1\n    },\n\n    /* Styles applied to the root element if `flexItem={true}`. */\n    flexItem: {\n      alignSelf: 'stretch',\n      height: 'auto'\n    }\n  };\n};\nvar Divider = React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$flexItem = props.flexItem,\n      flexItem = _props$flexItem === void 0 ? false : _props$flexItem,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, orientation === 'vertical' && classes.vertical),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   */\n  underline: PropTypes.oneOf(['none', 'hover', 'always']),\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.grey[700],\n      borderRadius: 2,\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: theme.palette.grey[200]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[0],\n        backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n      }\n    },\n    icon: {\n      width: 24,\n      height: 16\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction BreadcrumbCollapsed(props) {\n  var classes = props.classes,\n      other = _objectWithoutProperties(props, [\"classes\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"li\",\n    className: classes.root,\n    focusRipple: true\n  }, other), /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    className: classes.icon\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateBreadcrumbCollapsed'\n})(BreadcrumbCollapsed);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand(event) {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n\n      var focusable = event.currentTarget.parentNode.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: you have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: the Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   * By default, it maps the variant to a good default headline component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);"],"sourceRoot":""}