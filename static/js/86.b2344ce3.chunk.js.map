{"version":3,"sources":["pages/maps/GoogleMaps/Default.js","pages/maps/GoogleMaps/Hybrid.js","pages/maps/GoogleMaps/LightStyle.js","pages/maps/GoogleMaps/DarkStyle.js","pages/maps/GoogleMaps/Streetview.js","pages/maps/GoogleMaps/Markers.js","pages/maps/GoogleMaps/index.js"],"names":["Card","styled","MuiCard","spacing","Spacer","div","GoogleMapReactWrapper","Default","maps","options","center","lat","lng","zoom","mb","CardContent","Typography","variant","gutterBottom","fullscreenControl","mapTypeControl","mapTypeId","MapTypeId","ROADMAP","scaleControl","scrollwheel","streetViewControl","bootstrapURLKeys","key","defaultCenter","defaultZoom","Hybrid","HYBRID","LightStyle","styles","featureType","elementType","stylers","color","lightness","weight","visibility","saturation","DarkStyle","Streetview","panoramaRef","React","createRef","ref","onGoogleApiLoaded","map","panorama","StreetViewPanorama","ReactDOM","findDOMNode","current","position","pov","heading","pitch","visible","setStreetView","apiIsLoaded","yesIWantToUseGoogleMapApiInternals","Markers","Marker","title","renderMarkers","NavLink","forwardRef","props","innerRef","Divider","MuiDivider","Breadcrumbs","MuiBreadcrumbs","MuiTypography","GoogleMaps","Fragment","display","aria-label","mt","Link","component","exact","to","my","Grid","container","item","xs","md"],"mappings":"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","file":"static/js/86.b2344ce3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { CardContent, Card as MuiCard, Typography } from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport GoogleMapReact from \"google-map-react\";\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Spacer = styled.div(spacing);\r\n\r\nconst GoogleMapReactWrapper = styled.div`\r\n  height: 300px;\r\n  width: 100%;\r\n`;\r\n\r\nfunction Default({maps}) {\r\n  const options = {\r\n    center: {\r\n      lat: 40.712784,\r\n      lng: -74.005941\r\n    },\r\n    zoom: 14\r\n  };\r\n\r\n  const getMapOptions = maps => {\r\n    return {\r\n      fullscreenControl: true,\r\n      mapTypeControl: true,\r\n      mapTypeId: maps.MapTypeId.ROADMAP,\r\n      scaleControl: true,\r\n      scrollwheel: false,\r\n      streetViewControl: true\r\n    };\r\n  };\r\n\r\n  return (\r\n    <Card mb={1}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Default Map\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Displays the default road map view.\r\n        </Typography>\r\n\r\n        <Spacer mb={6} />\r\n\r\n        <GoogleMapReactWrapper>\r\n          <GoogleMapReact\r\n            options={getMapOptions}\r\n            bootstrapURLKeys={{\r\n              key: \"AIzaSyA-aWrwgr64q4b3TEZwQ0lkHI4lZK-moM4\"\r\n            }}\r\n            defaultCenter={options.center}\r\n            defaultZoom={options.zoom}\r\n          />\r\n        </GoogleMapReactWrapper>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Default;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { CardContent, Card as MuiCard, Typography } from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport GoogleMapReact from \"google-map-react\";\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Spacer = styled.div(spacing);\r\n\r\nconst GoogleMapReactWrapper = styled.div`\r\n  height: 300px;\r\n  width: 100%;\r\n`;\r\n\r\nfunction Hybrid() {\r\n  const options = {\r\n    center: {\r\n      lat: 40.712784,\r\n      lng: -74.005941\r\n    },\r\n    zoom: 14\r\n  };\r\n\r\n  const getMapOptions = maps => {\r\n    return {\r\n      fullscreenControl: true,\r\n      mapTypeControl: true,\r\n      mapTypeId: maps.MapTypeId.HYBRID,\r\n      scaleControl: true,\r\n      scrollwheel: false,\r\n      streetViewControl: true\r\n    };\r\n  };\r\n\r\n  return (\r\n    <Card mb={1}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Hybrid Map\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Displays a mixture of normal and satellite views.\r\n        </Typography>\r\n\r\n        <Spacer mb={6} />\r\n\r\n        <GoogleMapReactWrapper>\r\n          <GoogleMapReact\r\n            options={getMapOptions}\r\n            bootstrapURLKeys={{\r\n              key: \"AIzaSyA-aWrwgr64q4b3TEZwQ0lkHI4lZK-moM4\"\r\n            }}\r\n            defaultCenter={options.center}\r\n            defaultZoom={options.zoom}\r\n          />\r\n        </GoogleMapReactWrapper>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Hybrid;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { CardContent, Card as MuiCard, Typography } from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport GoogleMapReact from \"google-map-react\";\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Spacer = styled.div(spacing);\r\n\r\nconst GoogleMapReactWrapper = styled.div`\r\n  height: 300px;\r\n  width: 100%;\r\n`;\r\n\r\nfunction LightStyle() {\r\n  const options = {\r\n    center: {\r\n      lat: 40.712784,\r\n      lng: -74.005941\r\n    },\r\n    zoom: 14\r\n  };\r\n\r\n  const getMapOptions = () => {\r\n    return {\r\n      fullscreenControl: true,\r\n      mapTypeControl: true,\r\n      scaleControl: true,\r\n      scrollwheel: false,\r\n      streetViewControl: true,\r\n      styles: [\r\n        {\r\n          featureType: \"water\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#e9e9e9\"\r\n            },\r\n            {\r\n              lightness: 17\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"landscape\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#f5f5f5\"\r\n            },\r\n            {\r\n              lightness: 20\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"road.highway\",\r\n          elementType: \"geometry.fill\",\r\n          stylers: [\r\n            {\r\n              color: \"#ffffff\"\r\n            },\r\n            {\r\n              lightness: 17\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"road.highway\",\r\n          elementType: \"geometry.stroke\",\r\n          stylers: [\r\n            {\r\n              color: \"#ffffff\"\r\n            },\r\n            {\r\n              lightness: 29\r\n            },\r\n            {\r\n              weight: 0.2\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"road.arterial\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#ffffff\"\r\n            },\r\n            {\r\n              lightness: 18\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"road.local\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#ffffff\"\r\n            },\r\n            {\r\n              lightness: 16\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"poi\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#f5f5f5\"\r\n            },\r\n            {\r\n              lightness: 21\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"poi.park\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#dedede\"\r\n            },\r\n            {\r\n              lightness: 21\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          elementType: \"labels.text.stroke\",\r\n          stylers: [\r\n            {\r\n              visibility: \"on\"\r\n            },\r\n            {\r\n              color: \"#ffffff\"\r\n            },\r\n            {\r\n              lightness: 16\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          elementType: \"labels.text.fill\",\r\n          stylers: [\r\n            {\r\n              saturation: 36\r\n            },\r\n            {\r\n              color: \"#333333\"\r\n            },\r\n            {\r\n              lightness: 40\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          elementType: \"labels.icon\",\r\n          stylers: [\r\n            {\r\n              visibility: \"off\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"transit\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#f2f2f2\"\r\n            },\r\n            {\r\n              lightness: 19\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"administrative\",\r\n          elementType: \"geometry.fill\",\r\n          stylers: [\r\n            {\r\n              color: \"#fefefe\"\r\n            },\r\n            {\r\n              lightness: 20\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"administrative\",\r\n          elementType: \"geometry.stroke\",\r\n          stylers: [\r\n            {\r\n              color: \"#fefefe\"\r\n            },\r\n            {\r\n              lightness: 17\r\n            },\r\n            {\r\n              weight: 1.2\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  };\r\n\r\n  return (\r\n    <Card mb={1}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Light Style\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Light color scheme.\r\n        </Typography>\r\n\r\n        <Spacer mb={6} />\r\n\r\n        <GoogleMapReactWrapper>\r\n          <GoogleMapReact\r\n            options={getMapOptions}\r\n            bootstrapURLKeys={{\r\n              key: \"AIzaSyA-aWrwgr64q4b3TEZwQ0lkHI4lZK-moM4\"\r\n            }}\r\n            defaultCenter={options.center}\r\n            defaultZoom={options.zoom}\r\n          />\r\n        </GoogleMapReactWrapper>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default LightStyle;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { CardContent, Card as MuiCard, Typography } from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport GoogleMapReact from \"google-map-react\";\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Spacer = styled.div(spacing);\r\n\r\nconst GoogleMapReactWrapper = styled.div`\r\n  height: 300px;\r\n  width: 100%;\r\n`;\r\n\r\nfunction DarkStyle() {\r\n  const options = {\r\n    center: {\r\n      lat: 40.712784,\r\n      lng: -74.005941\r\n    },\r\n    zoom: 14\r\n  };\r\n\r\n  const getMapOptions = () => {\r\n    return {\r\n      fullscreenControl: true,\r\n      mapTypeControl: true,\r\n      scaleControl: true,\r\n      scrollwheel: false,\r\n      streetViewControl: true,\r\n      styles: [\r\n        {\r\n          featureType: \"all\",\r\n          elementType: \"labels.text.fill\",\r\n          stylers: [\r\n            {\r\n              saturation: 36\r\n            },\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 40\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"all\",\r\n          elementType: \"labels.text.stroke\",\r\n          stylers: [\r\n            {\r\n              visibility: \"on\"\r\n            },\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 16\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"all\",\r\n          elementType: \"labels.icon\",\r\n          stylers: [\r\n            {\r\n              visibility: \"off\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"administrative\",\r\n          elementType: \"geometry.fill\",\r\n          stylers: [\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 20\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"administrative\",\r\n          elementType: \"geometry.stroke\",\r\n          stylers: [\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 17\r\n            },\r\n            {\r\n              weight: 1.2\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"landscape\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 20\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"poi\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 21\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"road.highway\",\r\n          elementType: \"geometry.fill\",\r\n          stylers: [\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 17\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"road.highway\",\r\n          elementType: \"geometry.stroke\",\r\n          stylers: [\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 29\r\n            },\r\n            {\r\n              weight: 0.2\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"road.arterial\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 18\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"road.local\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 16\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"transit\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 19\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"water\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 17\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  };\r\n\r\n  return (\r\n    <Card mb={1}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Dark Style\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Dark color scheme.\r\n        </Typography>\r\n\r\n        <Spacer mb={6} />\r\n\r\n        <GoogleMapReactWrapper>\r\n          <GoogleMapReact\r\n            options={getMapOptions}\r\n            bootstrapURLKeys={{\r\n              key: \"AIzaSyA-aWrwgr64q4b3TEZwQ0lkHI4lZK-moM4\"\r\n            }}\r\n            defaultCenter={options.center}\r\n            defaultZoom={options.zoom}\r\n          />\r\n        </GoogleMapReactWrapper>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default DarkStyle;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { CardContent, Card as MuiCard, Typography } from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport GoogleMapReact from \"google-map-react\";\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Spacer = styled.div(spacing);\r\n\r\nconst GoogleMapReactWrapper = styled.div`\r\n  height: 300px;\r\n  width: 100%;\r\n`;\r\n\r\nfunction Streetview() {\r\n  const options = {\r\n    center: {\r\n      lat: 40.712784,\r\n      lng: -74.005941\r\n    },\r\n    zoom: 14\r\n  };\r\n\r\n  const getMapOptions = () => {\r\n    return {\r\n      fullscreenControl: true,\r\n      mapTypeControl: true,\r\n      scaleControl: true,\r\n      scrollwheel: false,\r\n      streetViewControl: true\r\n    };\r\n  };\r\n\r\n  const apiIsLoaded = (map, maps) => {\r\n    if (map) {\r\n      const panorama = new maps.StreetViewPanorama(\r\n        ReactDOM.findDOMNode(panoramaRef.current),\r\n        {\r\n          position: {\r\n            lat: 42.345573,\r\n            lng: -71.098326\r\n          },\r\n          pov: {\r\n            heading: 160,\r\n            pitch: 0\r\n          },\r\n          visible: true\r\n        }\r\n      );\r\n      map.setStreetView(panorama);\r\n    }\r\n  };\r\n\r\n  const panoramaRef = React.createRef();\r\n\r\n  return (\r\n    <Card mb={1}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Streetview\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Panoramic 360 degree views from designated roads throughout its\r\n          coverage area.\r\n        </Typography>\r\n\r\n        <Spacer mb={6} />\r\n\r\n        <GoogleMapReactWrapper>\r\n          <GoogleMapReact\r\n            ref={panoramaRef}\r\n            options={getMapOptions}\r\n            bootstrapURLKeys={{\r\n              key: \"AIzaSyA-aWrwgr64q4b3TEZwQ0lkHI4lZK-moM4\"\r\n            }}\r\n            defaultCenter={options.center}\r\n            defaultZoom={options.zoom}\r\n            onGoogleApiLoaded={({ map, maps }) => apiIsLoaded(map, maps)}\r\n            yesIWantToUseGoogleMapApiInternals={true}\r\n          />\r\n        </GoogleMapReactWrapper>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Streetview;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { CardContent, Card as MuiCard, Typography } from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport GoogleMapReact from \"google-map-react\";\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Spacer = styled.div(spacing);\r\n\r\nconst GoogleMapReactWrapper = styled.div`\r\n  height: 300px;\r\n  width: 100%;\r\n`;\r\n\r\nfunction Markers() {\r\n  const options = {\r\n    center: {\r\n      lat: 40.712784,\r\n      lng: -74.005941\r\n    },\r\n    zoom: 14\r\n  };\r\n\r\n  const getMapOptions = maps => {\r\n    return {\r\n      fullscreenControl: true,\r\n      mapTypeControl: true,\r\n      mapTypeId: maps.MapTypeId.ROADMAP,\r\n      scaleControl: true,\r\n      scrollwheel: false,\r\n      streetViewControl: true\r\n    };\r\n  };\r\n\r\n  const renderMarkers = (map, maps) => {\r\n    new maps.Marker({\r\n      position: {\r\n        lat: 40.712784,\r\n        lng: -74.005941\r\n      },\r\n      map,\r\n      title: \"Hello World!\"\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Card mb={1}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Markers\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Identify a location on a map.\r\n        </Typography>\r\n\r\n        <Spacer mb={6} />\r\n\r\n        <GoogleMapReactWrapper>\r\n          <GoogleMapReact\r\n            options={getMapOptions}\r\n            bootstrapURLKeys={{\r\n              key: \"AIzaSyA-aWrwgr64q4b3TEZwQ0lkHI4lZK-moM4\"\r\n            }}\r\n            defaultCenter={options.center}\r\n            defaultZoom={options.zoom}\r\n            onGoogleApiLoaded={({ map, maps }) => renderMarkers(map, maps)}\r\n          />\r\n        </GoogleMapReactWrapper>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Markers;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\r\n\r\nimport Helmet from 'react-helmet';\r\n\r\nimport Default from \"./Default\";\r\nimport Hybrid from \"./Hybrid\";\r\nimport LightStyle from \"./LightStyle\";\r\nimport DarkStyle from \"./DarkStyle\";\r\nimport Streetview from \"./Streetview\";\r\nimport Markers from \"./Markers\";\r\n\r\nimport {\r\n  Grid,\r\n  Link,\r\n  Breadcrumbs as MuiBreadcrumbs,\r\n  Divider as MuiDivider,\r\n  Typography as MuiTypography\r\n} from \"@material-ui/core\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nconst NavLink = React.forwardRef((props, ref) => (\r\n  <RouterNavLink innerRef={ref} {...props} />\r\n));\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nconst Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nfunction GoogleMaps() {\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet title=\"Google Maps\" />\r\n      <Typography variant=\"h3\" gutterBottom display=\"inline\">\r\n        Google Maps\r\n      </Typography>\r\n\r\n      <Breadcrumbs aria-label=\"Breadcrumb\" mt={2}>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Dashboard\r\n        </Link>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Maps\r\n        </Link>\r\n        <Typography>Google Maps</Typography>\r\n      </Breadcrumbs>\r\n\r\n      <Divider my={6} />\r\n\r\n      <Grid container spacing={6}>\r\n        <Grid item xs={12} md={6}>\r\n          <Default />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Hybrid />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <LightStyle />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <DarkStyle />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Streetview />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Markers />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default GoogleMaps;\r\n"],"sourceRoot":""}