{"version":3,"sources":["pages/pages/InvoiceList.js"],"names":["NavLink","React","forwardRef","props","ref","innerRef","Divider","styled","MuiDivider","spacing","Breadcrumbs","MuiBreadcrumbs","Paper","MuiPaper","Chip","MuiChip","paid","green","sent","orange","theme","palette","common","white","Spacer","div","ToolbarTitle","Avatar","MuiAvatar","primary","main","Customer","createData","customer","customerEmail","customerAvatar","status","amount","id","date","rows","descendingComparator","a","b","orderBy","headCells","alignment","label","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","padding","indeterminate","checked","onChange","inputProps","map","headCell","key","align","disablePadding","sortDirection","active","direction","onClick","property","event","EnhancedTableToolbar","color","variant","title","aria-label","EnhancedTable","useState","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","aria-labelledby","size","target","newSelecteds","n","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","row","isItemSelected","indexOf","labelId","hover","role","aria-checked","tabIndex","selectedIndex","newSelected","concat","handleClick","component","scope","ml","mr","mb","RouterLink","to","style","height","colSpan","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","value","InvoiceList","Fragment","justify","container","item","gutterBottom","display","mt","exact","my","xs"],"mappings":"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","file":"static/js/88.4e2a3a49.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NavLink as RouterNavLink, Link as RouterLink } from \"react-router-dom\";\r\n\r\nimport Helmet from 'react-helmet';\r\n\r\nimport {\r\n  Avatar as MuiAvatar,\r\n  Box,\r\n  Breadcrumbs as MuiBreadcrumbs,\r\n  Button,\r\n  Checkbox,\r\n  Chip as MuiChip,\r\n  Divider as MuiDivider,\r\n  Grid,\r\n  IconButton,\r\n  Link,\r\n  Paper as MuiPaper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TableSortLabel,\r\n  Toolbar,\r\n  Tooltip,\r\n  Typography\r\n} from \"@material-ui/core\";\r\n\r\nimport { green, orange } from \"@material-ui/core/colors\";\r\n\r\nimport {\r\n  Add as AddIcon,\r\n  Archive as ArchiveIcon,\r\n  FilterList as FilterListIcon,\r\n  RemoveRedEye as RemoveRedEyeIcon\r\n} from \"@material-ui/icons\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nconst NavLink = React.forwardRef((props, ref) => (\r\n  <RouterNavLink innerRef={ref} {...props} />\r\n));\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nconst Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\r\n\r\nconst Paper = styled(MuiPaper)(spacing);\r\n\r\nconst Chip = styled(MuiChip)`\r\n  ${spacing};\r\n\r\n  background: ${props => props.paid && green[500]};\r\n  background: ${props => props.sent && orange[700]};\r\n  color: ${props => (props.paid || props.sent) && props.theme.palette.common.white};\r\n`\r\n\r\nconst Spacer = styled.div`\r\n  flex: 1 1 100%;\r\n`;\r\n\r\nconst ToolbarTitle = styled.div`\r\n  min-width: 150px;\r\n`;\r\n\r\nconst Avatar = styled(MuiAvatar)`\r\n  background: ${props => props.theme.palette.primary.main};\r\n`;\r\n\r\nconst Customer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nfunction createData(customer, customerEmail, customerAvatar, status, amount, id, date) {\r\n  return { customer, customerEmail, customerAvatar, status, amount, id, date };\r\n}\r\n\r\nconst rows = [\r\n  createData('Anna Walley', 'anna@walley.com', 'A', 0, '$530,00', \"000112\", '2020-01-02'),\r\n  createData('Doris Fritz', 'doris@fritz.com', 'D', 1, '$209,00', \"000114\", '2020-02-13'),\r\n  createData('Edward Adkins', 'edward@adkins.com', 'E', 2, '$535,00', \"000117\", '2020-03-04'),\r\n  createData('Edwin Baker', 'edwin@baker.com', 'E', 2, '$678,00', \"000115\", '2020-02-17'),\r\n  createData('Gordon Workman', 'gordan@workman.com', 'G', 0, '$314,00', \"000119\", '2020-03-28'),\r\n  createData('Jo Avery', 'jo@avery.com', 'J', 0, '$864,00', \"000113\", '2020-01-23'),\r\n  createData('Leigha Hyden', 'leigha@hyden.com', 'L', 2, '$341,00', \"000118\", '2020-03-14'),\r\n  createData('Maureen Gagnon', 'maureen@gagnon.com', 'M', 1, '$781,00', \"000116\", '2020-02-22'),\r\n  createData('Maxine Thompson', 'maxine@thompson.com', 'M', 0, '$273,00', \"000121\", '2020-05-31'),\r\n  createData('Shawn Waddell', 'shawn@waddell.com', 'S', 0, '$713,00', \"000120\", '2020-04-25')\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'status', alignment: 'left', label: 'Status' },\r\n  { id: 'customer', alignment: 'left', label: 'Customer' },\r\n  { id: 'id', alignment: 'right', label: 'ID' },\r\n  { id: 'amount', alignment: 'right', label: 'Amount' },\r\n  { id: 'date', alignment: 'left', label: 'Issue Date' },\r\n  { id: 'actions', alignment: 'right', label: 'Actions' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.alignment}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nlet EnhancedTableToolbar = props => {\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar>\r\n      <ToolbarTitle>\r\n        {numSelected > 0 ? (\r\n          <Typography color=\"inherit\" variant=\"subtitle1\">\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : (\r\n          <Typography variant=\"h6\" id=\"tableTitle\">\r\n            Invoices\r\n          </Typography>\r\n        )}\r\n      </ToolbarTitle>\r\n      <Spacer />\r\n      <div>\r\n        {numSelected > 0 ? (\r\n          <Tooltip title=\"Delete\">\r\n            <IconButton aria-label=\"Delete\">\r\n              <ArchiveIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"Filter list\">\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nfunction EnhancedTable() {\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('customer');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.id);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, id) => {\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n  \r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n  \r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (id) => selected.indexOf(id) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div>\r\n      <Paper>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            aria-labelledby=\"tableTitle\"\r\n            size={'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.id);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={`${row.id}-${index}`}\r\n                      selected={isItemSelected}\r\n                      >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                          onClick={(event) => handleClick(event, row.id)}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\">\r\n                        <Customer>\r\n                          <Avatar>\r\n                            {row.customerAvatar}\r\n                          </Avatar>\r\n                          <Box ml={3}>\r\n                            {row.customer}\r\n                            <br />\r\n                            {row.customerEmail}\r\n                          </Box>\r\n                        </Customer>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {row.status === 0 && <Chip size=\"small\" mr={1} mb={1} label=\"Sent\" sent />}\r\n                        {row.status === 1 && <Chip size=\"small\" mr={1} mb={1} label=\"Void\" />}\r\n                        {row.status === 2 && <Chip size=\"small\" mr={1} mb={1} label=\"Paid\" paid />}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">#{row.id}</TableCell>\r\n                      <TableCell align=\"right\">{row.amount}</TableCell>\r\n                      <TableCell>{row.date}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <IconButton aria-label=\"delete\">\r\n                          <ArchiveIcon />\r\n                        </IconButton>  \r\n                        <IconButton aria-label=\"details\" component={RouterLink} to=\"/invoices/detail\">\r\n                          <RemoveRedEyeIcon />\r\n                        </IconButton>  \r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (53) * emptyRows }}>\r\n                  <TableCell colSpan={7} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction InvoiceList() {\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet title=\"Invoices\" />\r\n\r\n      <Grid\r\n        justify=\"space-between\"\r\n        container \r\n        spacing={24}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h3\" gutterBottom display=\"inline\">\r\n            Invoices\r\n          </Typography>\r\n\r\n          <Breadcrumbs aria-label=\"Breadcrumb\" mt={2}>\r\n            <Link component={NavLink} exact to=\"/\">\r\n              Dashboard\r\n            </Link>\r\n            <Link component={NavLink} exact to=\"/\">\r\n              Pages\r\n            </Link>\r\n            <Typography>Invoices</Typography>\r\n          </Breadcrumbs>\r\n        </Grid>\r\n        <Grid item>\r\n          <div>\r\n            <Button variant=\"contained\" color=\"primary\">\r\n              <AddIcon />\r\n              New Invoice\r\n            </Button>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Divider my={6} />\r\n\r\n      <Grid container spacing={6}>\r\n        <Grid item xs={12}>\r\n          <EnhancedTable />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default InvoiceList;\r\n"],"sourceRoot":""}