{"version":3,"sources":["pages/jobs/ShowJobs/JobsTable.tsx","pages/jobs/ShowJobs/index.tsx","../node_modules/@material-ui/core/esm/utils/createSvgIcon.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/Divider/Divider.js","../node_modules/@material-ui/core/esm/Link/Link.js","../node_modules/@material-ui/core/esm/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js"],"names":["JobsTable","useState","result","setResult","useEffect","fetch","method","then","response","json","data","aaData","console","log","NavLink","React","forwardRef","props","ref","innerRef","Card","styled","MuiCard","spacing","Divider","MuiDivider","Breadcrumbs","MuiBreadcrumbs","JobsTableCard","mb","CardContent","ShowJobs","Fragment","Helmet","title","Typography","variant","gutterBottom","display","aria-label","mt","Link","component","exact","to","my","Grid","container","item","xs","createSvgIcon","path","displayName","Component","memo","createElement","SvgIcon","_extends","muiName","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","clsx","root","elevation","withStyles","overflow","name","_props$component","padding","paddingBottom","_props$absolute","absolute","_props$flexItem","flexItem","_props$light","light","_props$orientation","orientation","_props$role","role","undefined","_props$variant","vertical","theme","height","margin","border","flexShrink","backgroundColor","palette","divider","position","bottom","left","width","inset","marginLeft","fade","middle","marginRight","alignSelf","_props$color","color","onBlur","onFocus","TypographyClasses","_props$underline","underline","_useIsFocusVisible","useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState","focusVisible","setFocusVisible","handlerRef","useForkRef","concat","capitalize","button","event","underlineNone","textDecoration","underlineHover","underlineAlways","WebkitTapHighlightColor","outline","borderRadius","cursor","userSelect","verticalAlign","borderStyle","d","grey","boxShadow","shadows","emphasize","icon","ButtonBase","focusRipple","MoreHorizIcon","children","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","separator","expanded","setExpanded","allItems","toArray","filter","child","map","index","li","key","ol","items","reduce","acc","current","length","push","insertSeparators","_toConsumableArray","slice","BreadcrumbCollapsed","onClick","focusable","currentTarget","parentNode","querySelector","focus","renderItemsBeforeAndAfter","flexWrap","alignItems","listStyle"],"mappings":"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","file":"static/js/49.cb498f1f.chunk.js","sourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import styled from \"styled-components\";\n\n// import {\n//   Grid,\n//   Paper as MuiPaper,\n//   Table,\n//   TableBody,\n//   TableContainer,\n//   TableCell,\n//   TableHead,\n//   TablePagination,\n//   TableRow,\n//   TableSortLabel,\n//   Typography,\n//   IconButton,\n//   createMuiTheme,\n//   ThemeProvider,\n//   Toolbar,\n//   Tooltip,\n//   Button,\n//   Theme,\n//   Snackbar,\n//   NativeSelect,\n//   TextField,\n//   ButtonGroup,\n// } from \"@material-ui/core\";\n// import { withStyles, createStyles } from \"@material-ui/core/styles\";\n// import { green } from \"@material-ui/core/colors\";\n// import DeleteIcon from \"@material-ui/icons/Delete\";\n// import EditIcon from \"@material-ui/icons/Edit\";\n// import AddIcon from \"@material-ui/icons/Add\";\n// import Alert from \"../../../components/Material/alert\";\n\n// import { spacing } from \"@material-ui/system\";\n// import { makeStyles } from \"@material-ui/styles\";\n\n// import { HeadCell } from \"./types\";\n// import { stableSort, getComparator } from \"../../../utils/helper_functions\";\n\n// // import EditAction from \"./EditAction\";\n// // import { actionTypes, Order } from \"./interfaces\";\n\n// const Paper = styled(MuiPaper)(spacing);\n// const Spacer = styled.div`\n//   flex: 1 1 auto;\n// `;\n\n// const StyledTableCell = withStyles((theme) =>\n//   createStyles({\n//     head: {\n//       // backgroundColor: theme.palette.primary.main,\n//       // color: theme.palette.common.white,\n//     },\n//     body: {\n//       fontSize: 13,\n//     },\n//   })\n// )(TableCell);\n\n// const StyledTableRow = withStyles((theme) =>\n//   createStyles({\n//     root: {\n//       \"&:nth-of-type(odd)\": {\n//         backgroundColor: theme.palette.action.hover,\n//       },\n//     },\n//   })\n// )(TableRow);\n\n// const StyledColumnLabel = withStyles({\n//   root: {\n//     textTransform: \"capitalize\",\n//     // fontWeight: \"bold\",\n//   },\n// })(Typography);\n\n// const useStyles = makeStyles((theme: Theme) =>\n//   createStyles({\n//     flexDiv: {\n//       display: \"flex\",\n//       justifyContent: \"space-between\",\n//       margin: \"5px\",\n//     },\n//     modal: {\n//       display: \"flex\",\n//       alignItems: \"center\",\n//       justifyContent: \"center\",\n//     },\n//     paper: {\n//       backgroundColor: theme.palette.background.paper,\n//       border: \"2px solid #000\",\n//       boxShadow: theme.shadows[5],\n//       padding: theme.spacing(2, 4, 3),\n//     },\n//     block: {\n//       display: \"inline-block\",\n//     },\n//     tableHead: {\n//       backgroundColor: \"lightgrey\",\n//     },\n//     alignTop: {\n//       verticalAlign: \"top\",\n//       margin: \"5px\",\n//       padding: \"0px\",\n//     },\n//     flexDiv2: {\n//       display: \"flex\",\n//       flexDirection: \"row\",\n//       justifyContent: \"space-around\",\n//     },\n//     searchButton: {\n//       // \"& > *\": {\n//       //   margin: theme.spacing(1),\n//       // },\n//       height: \"5vh\",\n//       margin: \"auto\",\n//     },\n//   })\n// );\n\n// const ButtonTheme = createMuiTheme({\n//   palette: {\n//     primary: green,\n//   },\n// });\n\n// const createData = ({ id, category, description, action }) => {\n//   return { id, category, description, action };\n// };\n\n// const headCells: HeadCell[] = [\n//   { id: \"id\", numeric: true, label: \"ID\" },\n//   { id: \"category\", numeric: false, label: \"Type\" },\n//   { id: \"description\", numeric: false, label: \"Description\" },\n//   { id: \"action\", numeric: false, label: \"Commands\" },\n// ];\n\n// function EnhancedTableHead(props) {\n//   const { order, orderBy, onRequestSort } = props;\n\n//   const classes = useStyles();\n\n//   const createSortHandler = (property: keyof Data) => (\n//     event: React.MouseEvent<unknown>\n//   ) => {\n//     onRequestSort(event, property);\n//   };\n\n//   return (\n//     <TableHead className={classes.tableHead}>\n//       <TableRow>\n//         {headCells.map((headCell, index) => {\n//           return (\n//             <StyledTableCell\n//               key={headCell.id}\n//               align={\"left\"}\n//               // padding={headCell.disablePadding ? \"none\" : \"default\"}\n//               sortDirection={orderBy === headCell.id ? order : false}\n//             >\n//               <TableSortLabel\n//                 active={orderBy === headCell.id}\n//                 direction={orderBy === headCell.id ? order : \"asc\"}\n//                 onClick={createSortHandler(headCell.id)}\n//               >\n//                 {headCell.label}\n//               </TableSortLabel>\n//             </StyledTableCell>\n//           );\n//         })}\n//         <StyledTableCell key={\"actions\"} align=\"center\">\n//           <StyledColumnLabel>Actions</StyledColumnLabel>\n//         </StyledTableCell>\n//       </TableRow>\n//     </TableHead>\n//   );\n// }\n\n// const EnhancedTable = () => {\n//   const [order, setOrder] = useState<>(\"desc\");\n//   const [orderBy, setOrderBy] = useState<>(\"id\");\n//   const [page, setPage] = useState<number>(0);\n//   // const [dense, setDense] = useState(false);\n//   const [rowsPerPage, setRowsPerPage] = useState<number>(10);\n//   const [openModal, setOpenModal] = useState<boolean>(false);\n//   const [rows, setRows] = useState([]);\n//   const [currCommands, setCurrCommands] = useState<string>(\"\");\n//   const [currDescription, setCurrDescription] = useState<string>(\"\");\n//   const [openDeleted, setOpenDeleted] = useState(false);\n//   const [openSuccess, setOpenSuccess] = useState(false);\n\n//   const [searchType, setSearchType] = useState<string>(\"anything\");\n//   const [searchContain, setSearchContain] = useState<Boolean>(true);\n//   const [searchText, setSearchText] = useState<string>(\"\");\n//   const [searchResult, setSearchResult] = useState(rows);\n\n//   const classes = useStyles();\n\n//   useEffect(() => {\n//     const api =\n//       \"https://localhost/pages/resources/ajax/actions/get_actions.php\";\n//     fetch(api, {\n//       method: \"POST\",\n//     })\n//       .then((response) => {\n//         return response.json();\n//       })\n//       .then((result) => {\n//         const data = result.map((el: any) => {\n//           el.id = parseInt(el.id);\n//           return createData(el);\n//         });\n//         console.log(data);\n\n//         setRows(data);\n//         setSearchResult(data);\n//       });\n//   }, []);\n\n//   const handleRequestSort = (event: any, property: keyof Data) => {\n//     const isAsc = orderBy === property && order === \"asc\";\n//     setOrder(isAsc ? \"desc\" : \"asc\");\n//     setOrderBy(property);\n//   };\n\n//   const handleChangePage = (event: any, newPage: any) => {\n//     setPage(newPage);\n//   };\n\n//   const handleChangeRowsPerPage = (event: any) => {\n//     setRowsPerPage(parseInt(event.target.value, 10));\n//     setPage(0);\n//   };\n\n//   const handleOpenModal = () => {\n//     setOpenModal(!openModal);\n//   };\n\n//   // const handleChangeDense = (event: any) => {\n//   //   setDense(event.target.checked);\n//   // };\n\n//   const handleSetCurrAction = (\n//     type: actionTypes,\n//     description: string,\n//     commands: string\n//   ) => () => {\n//     setCurrType(type);\n//     setCurrDescription(description);\n//     setCurrCommands(commands);\n//     setOpenModal(!openModal);\n//   };\n\n//   const handleResetSelected = () => {\n//     setCurrType(\"compress\");\n//     setCurrDescription(\"\");\n//     setCurrCommands(\"\");\n//   };\n\n//   const handleCloseDeleted = () => {\n//     setOpenDeleted(false);\n//   };\n\n//   const handleSuccess = () => {\n//     setOpenSuccess(true);\n//   };\n\n//   const handleCloseSuccess = (\n//     event?: React.SyntheticEvent,\n//     reason?: string\n//   ) => {\n//     if (reason === \"clickaway\") {\n//       return;\n//     }\n\n//     setOpenSuccess(false);\n//   };\n\n//   const handleResetSearch = () => {\n//     setSearchType(\"anything\");\n//     setSearchContain(true);\n//     setSearchText(\"\");\n//     setSearchResult(rows);\n//   };\n\n//   const handleSearchType = (event: any) => {\n//     const value = event.target.value;\n//     setSearchType(value);\n//   };\n\n//   const handleSearchText = (event: any) => {\n//     const value = event.target.value;\n//     setSearchText(value);\n//   };\n//   const handleSearchContain = (event: any) => {\n//     const value = event.target.value;\n//     if (value === \"contains\") {\n//       setSearchContain(true);\n//     } else {\n//       setSearchContain(false);\n//     }\n//   };\n//   const handleSearch = () => {\n//     let result = rows;\n//     if (searchContain) {\n//       if (searchText.length === 0) {\n//         setSearchResult(rows);\n//         return;\n//       }\n//       result = result.filter((elm: any) => {\n//         const text = searchText.toLowerCase();\n//         return searchType === \"anything\"\n//           ? elm.category.toLowerCase().includes(text) ||\n//               elm.id.toString().includes(text) ||\n//               elm.description.toLowerCase().includes(text) ||\n//               elm.action.toLowerCase().includes(text)\n//           : elm[searchType].toString().toLowerCase().includes(text);\n//       });\n//     } else {\n//       if (searchText.length === 0) {\n//         setSearchResult([]);\n//         return;\n//       }\n//       result = result.filter((elm: any) => {\n//         const text = searchText.toLowerCase();\n\n//         return searchType === \"anything\"\n//           ? !elm.category.toLowerCase().includes(text) &&\n//               !elm.id.toString().includes(text) &&\n//               !elm.description.toLowerCase().includes(text) &&\n//               !elm.action.toLowerCase().includes(text)\n//           : !elm[searchType].toString().toLowerCase().includes(text);\n//       });\n//     }\n//     setSearchResult(result);\n//   };\n\n//   return (\n//     <div>\n//       <Paper>\n//         <Toolbar>\n//           <div\n//             style={{\n//               // backgroundColor: \"#cfe8fc\",\n//               height: \"9vh\",\n//               // padding: \"10px\",\n//               display: \"flex\",\n//               flexDirection: \"row\",\n//               // width: \"100%\",\n//               justifyContent: \"center\",\n//             }}\n//           >\n//             <Typography\n//               variant=\"subtitle1\"\n//               style={{ margin: \"auto\", paddingLeft: \"5px\" }}\n//             >\n//               Find an action such that:\n//             </Typography>\n//             <NativeSelect\n//               style={{ margin: \"auto\", paddingLeft: \"5px\" }}\n//               // className={classes.labelWidth}\n//               value={searchType}\n//               onChange={handleSearchType}\n//             >\n//               <option value=\"anything\">Anything</option>\n//               <option value=\"id\">ID</option>\n//               <option value=\"category\">Type</option>\n//               <option value=\"description\">Description</option>\n//               <option value=\"action\">Commands</option>\n//             </NativeSelect>\n//             <NativeSelect\n//               style={{ margin: \"auto\", paddingLeft: \"5px\" }}\n//               // className={classes.labelWidth}\n//               value={searchContain ? \"contains\" : \"notcontain\"}\n//               onChange={handleSearchContain}\n//             >\n//               <option value=\"contains\">Contains</option>\n//               <option value=\"notcontain\">Does Not Contain</option>\n//             </NativeSelect>\n//             <TextField\n//               id=\"text\"\n//               label=\"\"\n//               value={searchText}\n//               onChange={handleSearchText}\n//               style={{ margin: \"auto\", paddingRight: \"5px\" }}\n//             />\n//             <ButtonGroup\n//               variant=\"contained\"\n//               color=\"primary\"\n//               component=\"div\"\n//               className={classes.searchButton}\n//             >\n//               <Button onClick={handleSearch}>Search</Button>\n//               <Button onClick={handleResetSearch}>Reset</Button>\n//             </ButtonGroup>\n//           </div>\n//           <Spacer />\n//           <div></div>\n//         </Toolbar>\n//         <div className={classes.flexDiv}>\n//           <div>{}</div>\n//           <aside>\n//             <Button\n//               variant=\"outlined\"\n//               color=\"primary\"\n//               onClick={handleOpenModal}\n//               startIcon={<AddIcon />}\n//             >\n//               Add Action\n//             </Button>\n//           </aside>\n//         </div>\n//         <ThemeProvider theme={ButtonTheme}>\n//           <TableContainer>\n//             <Table\n//               aria-labelledby=\"tableTitle\"\n//               size=\"medium\"\n//               // size={dense ? \"small\" : \"medium\"}\n//               aria-label=\"enhanced table\"\n//             >\n//               <EnhancedTableHead\n//                 order={order}\n//                 orderBy={orderBy}\n//                 onRequestSort={handleRequestSort}\n//               />\n//               <TableBody>\n//                 {searchResult.length === 0 ? (\n//                   <TableRow>\n//                     <TableCell colSpan={6}>No matching records found</TableCell>\n//                   </TableRow>\n//                 ) : (\n//                   stableSort(searchResult, getComparator(order, orderBy))\n//                     .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n//                     .map((row: any, index: number) => {\n//                       return (\n//                         <StyledTableRow\n//                           tabIndex={-1}\n//                           key={row.id}\n//                           className={classes.alignTop}\n//                         >\n//                           <StyledTableCell\n//                             component=\"th\"\n//                             align=\"left\"\n//                             scope=\"row\"\n//                           >\n//                             {row.id}\n//                           </StyledTableCell>\n//                           <StyledTableCell align=\"left\">\n//                             {row.category}\n//                           </StyledTableCell>\n//                           <StyledTableCell align=\"left\">\n//                             {row.description}\n//                           </StyledTableCell>\n//                           <StyledTableCell align=\"left\">\n//                             {row.action}\n//                           </StyledTableCell>\n//                           <StyledTableCell align=\"left\">\n//                             <div className={classes.flexDiv2}>\n//                               <Tooltip title=\"Edit\">\n//                                 <IconButton\n//                                   aria-label=\"edit\"\n//                                   color=\"primary\"\n//                                   size=\"small\"\n//                                   onClick={handleSetCurrAction(\n//                                     row.category.toLowerCase(),\n//                                     row.description,\n//                                     row.action\n//                                   )}\n//                                 >\n//                                   <EditIcon />\n//                                 </IconButton>\n//                               </Tooltip>\n//                               <Tooltip title=\"Delete\">\n//                                 <IconButton\n//                                   aria-label=\"delete\"\n//                                   color=\"secondary\"\n//                                   size=\"small\"\n//                                   // onClick={handleOpenModal}\n//                                 >\n//                                   <DeleteIcon />\n//                                 </IconButton>\n//                               </Tooltip>\n//                             </div>\n//                           </StyledTableCell>\n//                         </StyledTableRow>\n//                       );\n//                     })\n//                 )}\n//               </TableBody>\n//             </Table>\n//           </TableContainer>\n//         </ThemeProvider>\n//         <TablePagination\n//           rowsPerPageOptions={[10, 25, 50]}\n//           component=\"div\"\n//           count={searchResult.length}\n//           rowsPerPage={rowsPerPage}\n//           page={page}\n//           onChangePage={handleChangePage}\n//           onChangeRowsPerPage={handleChangeRowsPerPage}\n//         />\n//       </Paper>\n//       {openModal && (\n//         <EditAction\n//           openModal={openModal}\n//           handleOpenModal={handleOpenModal}\n//           currType={currType}\n//           currDescription={currDescription}\n//           currCommands={currCommands}\n//           handleResetSelected={handleResetSelected}\n//           handleSuccess={handleSuccess}\n//         />\n//       )}\n//       {/* <FormControlLabel\n//         control={<Switch checked={dense} onChange={handleChangeDense} />}\n//         label=\"Dense padding\"\n//       /> */}\n//       {openDeleted && (\n//         <Snackbar\n//           open={openDeleted}\n//           autoHideDuration={6000}\n//           onClose={handleCloseDeleted}\n//         >\n//           <Alert onClose={handleCloseDeleted} severity=\"success\">\n//             You have successfully deleted an Action!\n//           </Alert>\n//         </Snackbar>\n//       )}\n//       {openSuccess && (\n//         <Snackbar\n//           open={openSuccess}\n//           autoHideDuration={6000}\n//           onClose={handleCloseSuccess}\n//         >\n//           <Alert onClose={handleCloseSuccess} severity=\"success\">\n//             Action has been saved!\n//           </Alert>\n//         </Snackbar>\n//       )}\n//     </div>\n//   );\n// };\n\n// function JobsTable() {\n//   return (\n//     <React.Fragment>\n//       <Grid container spacing={6}>\n//         <Grid item xs={12}>\n//           <EnhancedTable />\n//         </Grid>\n//       </Grid>\n//     </React.Fragment>\n//   );\n// }\n\n// export default JobsTable;\n// // export {};\n\nimport React, { useState, useEffect } from \"react\";\n\nconst JobsTable: React.FC = () => {\n  const [result, setResult] = useState();\n  useEffect(() => {\n    const api =\n      \"https://localhost/pages/resources/ajax/jobs/server_processing_show_jobs.php\";\n    fetch(api, {\n      method: \"POST\",\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        setResult(data.aaData[0][0]);\n        console.log(data.aaData[0][0]);\n      });\n  }, []);\n\n  return <div>{result}</div>;\n};\n\nexport default JobsTable;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\n\nimport { Helmet } from \"react-helmet\";\n\nimport {\n  CardContent,\n  Grid,\n  Link,\n  Breadcrumbs as MuiBreadcrumbs,\n  Card as MuiCard,\n  Divider as MuiDivider,\n  Typography,\n} from \"@material-ui/core\";\n\nimport { spacing } from \"@material-ui/system\";\n\nimport JobsTable from \"./JobsTable\";\n\nconst NavLink = React.forwardRef((props: any, ref: any) => (\n  <RouterNavLink innerRef={ref} {...props} />\n));\n\nconst Card = styled(MuiCard)(spacing);\n\nconst Divider = styled(MuiDivider)(spacing);\n\nconst Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\n\nfunction JobsTableCard() {\n  return (\n    <Card mb={6}>\n      <CardContent>\n        {/* <Typography variant=\"h6\" gutterBottom>\n          Empty card\n        </Typography> */}\n        <JobsTable />\n        {/* <Typography variant=\"body2\" gutterBottom>\n          Empty card\n        </Typography>\n        {/* <AdvancedTable /> */}\n      </CardContent>\n    </Card>\n  );\n}\n\nfunction ShowJobs() {\n  return (\n    <React.Fragment>\n      <Helmet title=\"Actions\" />\n      <Typography variant=\"h3\" gutterBottom display=\"inline\">\n        Show Job Queue\n      </Typography>\n\n      <Breadcrumbs aria-label=\"Breadcrumb\" mt={2}>\n        <Link component={NavLink} exact to=\"/\">\n          Jobs\n        </Link>\n        <Typography>Show Job Queue</Typography>\n      </Breadcrumbs>\n\n      <Divider my={6} />\n\n      <Grid container spacing={6}>\n        <Grid item xs={12}>\n          <JobsTableCard />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default ShowJobs;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '../SvgIcon';\n/**\n * Private module reserved for @material-ui/x packages.\n */\n\nexport default function createSvgIcon(path, displayName) {\n  var Component = React.memo(React.forwardRef(function (props, ref) {\n    return /*#__PURE__*/React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return Component;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 1,\n      margin: 0,\n      // Reset browser default style.\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      backgroundColor: fade(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      width: 1\n    },\n\n    /* Styles applied to the root element if `flexItem={true}`. */\n    flexItem: {\n      alignSelf: 'stretch',\n      height: 'auto'\n    }\n  };\n};\nvar Divider = React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$flexItem = props.flexItem,\n      flexItem = _props$flexItem === void 0 ? false : _props$flexItem,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, orientation === 'vertical' && classes.vertical),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   */\n  underline: PropTypes.oneOf(['none', 'hover', 'always']),\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.grey[700],\n      borderRadius: 2,\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: theme.palette.grey[200]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[0],\n        backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n      }\n    },\n    icon: {\n      width: 24,\n      height: 16\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction BreadcrumbCollapsed(props) {\n  var classes = props.classes,\n      other = _objectWithoutProperties(props, [\"classes\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"li\",\n    className: classes.root,\n    focusRipple: true\n  }, other), /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    className: classes.icon\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateBreadcrumbCollapsed'\n})(BreadcrumbCollapsed);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand(event) {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n\n      var focusable = event.currentTarget.parentNode.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: you have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: the Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   * By default, it maps the variant to a good default headline component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);"],"sourceRoot":""}