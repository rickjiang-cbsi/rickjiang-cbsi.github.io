{"version":3,"sources":["pages/components/Snackbars.js"],"names":["NavLink","React","forwardRef","props","ref","innerRef","Card","styled","MuiCard","spacing","Divider","MuiDivider","Breadcrumbs","MuiBreadcrumbs","Paper","MuiPaper","Button","MuiButton","SimpleSnackbar","state","open","handleClick","setState","handleClose","event","reason","mb","variant","gutterBottom","mt","onClick","this","color","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","message","id","action","key","size","aria-label","Component","PositionedSnackbar","mr","ConsecutiveSnackbar","queue","messageInfo","push","Date","getTime","processQueue","length","shift","handleExited","onExited","DirectionSnackbar","Transition","direction","transitionLeft","transitionUp","transitionRight","transitionDown","TransitionComponent","TransitionSnackbar","Fade","Snackbars","Fragment","title","display","component","exact","to","my","container","item","xs","md"],"mappings":"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","file":"static/js/75.9c34826c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\r\n\r\nimport Helmet from 'react-helmet';\r\n\r\nimport {\r\n  CardContent,\r\n  Fade,\r\n  Grid,\r\n  IconButton,\r\n  Link,\r\n  Breadcrumbs as MuiBreadcrumbs,\r\n  Button as MuiButton,\r\n  Card as MuiCard,\r\n  Divider as MuiDivider,\r\n  Paper as MuiPaper,\r\n  Slide,\r\n  Snackbar,\r\n  Typography\r\n} from \"@material-ui/core\";\r\n\r\nimport { Close as CloseIcon } from \"@material-ui/icons\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nconst NavLink = React.forwardRef((props, ref) => (\r\n  <RouterNavLink innerRef={ref} {...props} />\r\n));\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nconst Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\r\n\r\nconst Paper = styled(MuiPaper)(spacing);\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nclass SimpleSnackbar extends React.Component {\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card mb={6}>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Simple Snackbar\r\n          </Typography>\r\n          <Typography variant=\"body2\" gutterBottom>\r\n            A basic snackbar that aims to reproduce Google Keep's snackbar\r\n            behavior.\r\n          </Typography>\r\n          <Paper mt={3}>\r\n            <Button\r\n              onClick={this.handleClick}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n            >\r\n              Open simple snackbar\r\n            </Button>\r\n            <Snackbar\r\n              anchorOrigin={{\r\n                vertical: \"bottom\",\r\n                horizontal: \"left\"\r\n              }}\r\n              open={this.state.open}\r\n              autoHideDuration={6000}\r\n              onClose={this.handleClose}\r\n              ContentProps={{\r\n                \"aria-describedby\": \"message-id\"\r\n              }}\r\n              message={<span id=\"message-id\">Note archived</span>}\r\n              action={[\r\n                <Button\r\n                  key=\"undo\"\r\n                  color=\"secondary\"\r\n                  size=\"small\"\r\n                  onClick={this.handleClose}\r\n                >\r\n                  UNDO\r\n                </Button>,\r\n                <IconButton\r\n                  key=\"close\"\r\n                  aria-label=\"Close\"\r\n                  color=\"inherit\"\r\n                  onClick={this.handleClose}\r\n                >\r\n                  <CloseIcon />\r\n                </IconButton>\r\n              ]}\r\n            />\r\n          </Paper>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nclass PositionedSnackbar extends React.Component {\r\n  state = {\r\n    open: false,\r\n    vertical: \"top\",\r\n    horizontal: \"center\"\r\n  };\r\n\r\n  handleClick = state => () => {\r\n    this.setState({ open: true, ...state });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    const { vertical, horizontal, open } = this.state;\r\n    return (\r\n      <Card mb={6}>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Positioned Snackbar\r\n          </Typography>\r\n          <Typography variant=\"body2\" gutterBottom>\r\n            There may be circumstances when the placement of the snackbar needs\r\n            to be more flexible.\r\n          </Typography>\r\n          <Paper mt={3}>\r\n            <Button\r\n              onClick={this.handleClick({\r\n                vertical: \"top\",\r\n                horizontal: \"center\"\r\n              })}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              size=\"small\"\r\n              mr={2}\r\n            >\r\n              Top-Center\r\n            </Button>\r\n            <Button\r\n              onClick={this.handleClick({\r\n                vertical: \"top\",\r\n                horizontal: \"right\"\r\n              })}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              size=\"small\"\r\n              mr={2}\r\n            >\r\n              Top-Right\r\n            </Button>\r\n            <Button\r\n              onClick={this.handleClick({\r\n                vertical: \"bottom\",\r\n                horizontal: \"right\"\r\n              })}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              size=\"small\"\r\n              mr={2}\r\n            >\r\n              Bottom-Right\r\n            </Button>\r\n            <Button\r\n              onClick={this.handleClick({\r\n                vertical: \"bottom\",\r\n                horizontal: \"center\"\r\n              })}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              size=\"small\"\r\n              mr={2}\r\n            >\r\n              Bottom-Center\r\n            </Button>\r\n            <Button\r\n              onClick={this.handleClick({\r\n                vertical: \"bottom\",\r\n                horizontal: \"left\"\r\n              })}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              size=\"small\"\r\n              mr={2}\r\n            >\r\n              Bottom-Left\r\n            </Button>\r\n            <Button\r\n              onClick={this.handleClick({\r\n                vertical: \"top\",\r\n                horizontal: \"left\"\r\n              })}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              size=\"small\"\r\n              mr={2}\r\n            >\r\n              Top-Left\r\n            </Button>\r\n            <Snackbar\r\n              anchorOrigin={{ vertical, horizontal }}\r\n              open={open}\r\n              onClose={this.handleClose}\r\n              ContentProps={{\r\n                \"aria-describedby\": \"message-id\"\r\n              }}\r\n              message={<span id=\"message-id\">I love snacks</span>}\r\n            />\r\n          </Paper>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nclass ConsecutiveSnackbar extends React.Component {\r\n  queue = [];\r\n\r\n  state = {\r\n    open: false,\r\n    messageInfo: {}\r\n  };\r\n\r\n  handleClick = message => () => {\r\n    this.queue.push({\r\n      message,\r\n      key: new Date().getTime()\r\n    });\r\n\r\n    if (this.state.open) {\r\n      // immediately begin dismissing current message\r\n      // to start showing new one\r\n      this.setState({ open: false });\r\n    } else {\r\n      this.processQueue();\r\n    }\r\n  };\r\n\r\n  processQueue = () => {\r\n    if (this.queue.length > 0) {\r\n      this.setState({\r\n        messageInfo: this.queue.shift(),\r\n        open: true\r\n      });\r\n    }\r\n  };\r\n\r\n  handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleExited = () => {\r\n    this.processQueue();\r\n  };\r\n\r\n  render() {\r\n    const { messageInfo } = this.state;\r\n\r\n    return (\r\n      <Card mb={6}>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Consecutive Snackbar\r\n          </Typography>\r\n          <Typography variant=\"body2\" gutterBottom>\r\n            Per Google's guidelines, when a second snackbar is triggered while\r\n            the first is displayed, the first should start the contraction\r\n            motion downwards before the second one animates upwards.\r\n          </Typography>\r\n          <Paper mt={3}>\r\n            <Button\r\n              onClick={this.handleClick(\"Message A\")}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              mr={2}\r\n            >\r\n              Show message A\r\n            </Button>\r\n            <Button\r\n              onClick={this.handleClick(\"Message B\")}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              mr={2}\r\n            >\r\n              Show message B\r\n            </Button>\r\n            <Snackbar\r\n              key={messageInfo.key}\r\n              anchorOrigin={{\r\n                vertical: \"bottom\",\r\n                horizontal: \"left\"\r\n              }}\r\n              open={this.state.open}\r\n              autoHideDuration={6000}\r\n              onClose={this.handleClose}\r\n              onExited={this.handleExited}\r\n              ContentProps={{\r\n                \"aria-describedby\": \"message-id\"\r\n              }}\r\n              message={<span id=\"message-id\">{messageInfo.message}</span>}\r\n              action={[\r\n                <Button\r\n                  key=\"undo\"\r\n                  color=\"secondary\"\r\n                  size=\"small\"\r\n                  onClick={this.handleClose}\r\n                >\r\n                  UNDO\r\n                </Button>,\r\n                <IconButton\r\n                  key=\"close\"\r\n                  aria-label=\"Close\"\r\n                  color=\"inherit\"\r\n                  onClick={this.handleClose}\r\n                >\r\n                  <CloseIcon />\r\n                </IconButton>\r\n              ]}\r\n            />\r\n          </Paper>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nclass DirectionSnackbar extends React.Component {\r\n  state = {\r\n    open: false,\r\n    Transition: null\r\n  };\r\n\r\n  handleClick = Transition => () => {\r\n    this.setState({ open: true, Transition });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  transitionLeft(props) {\r\n    return <Slide {...props} direction=\"left\" />;\r\n  }\r\n\r\n  transitionUp(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n  }\r\n\r\n  transitionRight(props) {\r\n    return <Slide {...props} direction=\"right\" />;\r\n  }\r\n\r\n  transitionDown(props) {\r\n    return <Slide {...props} direction=\"down\" />;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card mb={6}>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Control Direction\r\n          </Typography>\r\n          <Typography variant=\"body2\" gutterBottom>\r\n            Change the direction of the transition. Slide is the default\r\n            transition.\r\n          </Typography>\r\n          <Paper mt={3}>\r\n            <Button\r\n              onClick={this.handleClick(this.transitionLeft)}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              mr={2}\r\n            >\r\n              Right\r\n            </Button>\r\n            <Button\r\n              onClick={this.handleClick(this.transitionUp)}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              mr={2}\r\n            >\r\n              Up\r\n            </Button>\r\n            <Button\r\n              onClick={this.handleClick(this.transitionRight)}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              mr={2}\r\n            >\r\n              Left\r\n            </Button>\r\n            <Button\r\n              onClick={this.handleClick(this.transitionDown)}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              mr={2}\r\n            >\r\n              Down\r\n            </Button>\r\n            <Snackbar\r\n              open={this.state.open}\r\n              onClose={this.handleClose}\r\n              TransitionComponent={this.state.Transition}\r\n              ContentProps={{\r\n                \"aria-describedby\": \"message-id\"\r\n              }}\r\n              message={<span id=\"message-id\">I love snacks</span>}\r\n            />\r\n          </Paper>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nclass TransitionSnackbar extends React.Component {\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card mb={6}>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Snackbar Transition\r\n          </Typography>\r\n          <Typography variant=\"body2\" gutterBottom>\r\n            Use a different transition (fade).\r\n          </Typography>\r\n          <Paper mt={3}>\r\n            <Button\r\n              onClick={this.handleClick}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n            >\r\n              Open with Fade Transition\r\n            </Button>\r\n            <Snackbar\r\n              open={this.state.open}\r\n              onClose={this.handleClose}\r\n              TransitionComponent={Fade}\r\n              ContentProps={{\r\n                \"aria-describedby\": \"message-id\"\r\n              }}\r\n              message={<span id=\"message-id\">I love snacks</span>}\r\n            />\r\n          </Paper>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Snackbars() {\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet title=\"Snackbars\" />\r\n      <Typography variant=\"h3\" gutterBottom display=\"inline\">\r\n        Snackbars\r\n      </Typography>\r\n\r\n      <Breadcrumbs aria-label=\"Breadcrumb\" mt={2}>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Dashboard\r\n        </Link>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Components\r\n        </Link>\r\n        <Typography>Snackbars</Typography>\r\n      </Breadcrumbs>\r\n\r\n      <Divider my={6} />\r\n\r\n      <Grid container spacing={6}>\r\n        <Grid item xs={12} md={6}>\r\n          <SimpleSnackbar />\r\n          <ConsecutiveSnackbar />\r\n          <TransitionSnackbar />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <PositionedSnackbar />\r\n          <DirectionSnackbar />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Snackbars;\r\n"],"sourceRoot":""}