{"version":3,"sources":["pages/pages/Tasks.js"],"names":["NavLink","React","forwardRef","props","ref","innerRef","Card","styled","MuiCard","spacing","CardContent","MuiCardContent","theme","Divider","MuiDivider","Breadcrumbs","MuiBreadcrumbs","TaskWrapper","palette","grey","body","background","TaskWrapperContent","TaskAvatars","div","MessageCircleIcon","MessageCircle","TaskBadge","color","TaskNotifications","TaskNotificationsAmount","Typography","MuiTypography","TaskTitle","Lane","title","description","onContainerLoaded","children","mb","pb","variant","gutterBottom","container","fullWidth","Task","content","avatars","badges","map","i","key","max","avatar","src","notifications","demoTasks","green","orange","blue","Tasks","containers","onContainerReady","push","useEffect","dragula","Fragment","display","aria-label","mt","component","exact","to","my","item","xs","lg","xl"],"mappings":"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","file":"static/js/90.0aa8a9fb.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\r\n\r\nimport Helmet from 'react-helmet';\r\n\r\nimport \"react-dragula/dist/dragula.css\";\r\n\r\nimport {\r\n  Avatar,\r\n  Breadcrumbs as MuiBreadcrumbs,\r\n  Button,\r\n  Card as MuiCard,\r\n  CardContent as MuiCardContent,\r\n  Divider as MuiDivider,\r\n  Grid,\r\n  Link,\r\n  Typography as MuiTypography\r\n} from \"@material-ui/core\";\r\n\r\nimport { AvatarGroup } from '@material-ui/lab';\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { orange, green, blue } from \"@material-ui/core/colors\";\r\n\r\nimport { Add as AddIcon } from \"@material-ui/icons\";\r\n\r\nimport { MessageCircle } from \"react-feather\";\r\n\r\nimport dragula from \"react-dragula\";\r\n\r\nconst NavLink = React.forwardRef((props, ref) => (\r\n  <RouterNavLink innerRef={ref} {...props} />\r\n));\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst CardContent = styled(MuiCardContent)`\r\n  &:last-child {\r\n    padding-bottom: ${props => props.theme.spacing(4)}px;\r\n  }\r\n`;\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nconst Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\r\n\r\nconst TaskWrapper = styled(Card)`\r\n  border: 1px solid ${props => props.theme.palette.grey[300]};\r\n  margin-bottom: ${props => props.theme.spacing(4)}px;\r\n  cursor: grab;\r\n  \r\n  &:hover {\r\n    background: ${props => props.theme.body.background};\r\n  }\r\n`;\r\n\r\nconst TaskWrapperContent = styled(CardContent)`\r\n  position: relative;\r\n\r\n  &:last-child {\r\n    padding-bottom: ${props => props.theme.spacing(4)}px;\r\n  }\r\n`;\r\n\r\nconst TaskAvatars = styled.div`\r\n  margin-left: 8px;\r\n`\r\n\r\nconst MessageCircleIcon = styled(MessageCircle)`\r\n  color: ${props => props.theme.palette.grey[500]};\r\n  vertical-align: middle;\r\n`\r\n\r\nconst TaskBadge = styled.div`\r\n  background: ${props => props.color};\r\n  width: 40px;\r\n  height: 6px;\r\n  border-radius: 6px;\r\n  display: inline-block;\r\n  margin-right: ${props => props.theme.spacing(2)}px;\r\n`\r\n\r\nconst TaskNotifications = styled.div`\r\n  display: flex;\r\n  position: absolute;\r\n  bottom: ${props => props.theme.spacing(4)}px;\r\n  right: ${props => props.theme.spacing(4)}px;\r\n`\r\n\r\nconst TaskNotificationsAmount = styled.div`\r\n  color: ${props => props.theme.palette.grey[500]};\r\n  font-weight: 600;\r\n  margin-right: ${props => props.theme.spacing(1)}px;\r\n  line-height: 1.75;\r\n`\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst TaskTitle = styled(Typography)`\r\n  font-weight: 600;\r\n  font-size: 15px;\r\n  margin-right: ${props => props.theme.spacing(10)}px;\r\n`\r\n\r\nfunction Lane({title, description, onContainerLoaded, children}) {\r\n  const handleContainerLoaded = container => {\r\n    if (container) {\r\n      onContainerLoaded(container);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent pb={0}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          {title}\r\n        </Typography>\r\n        <Typography variant=\"body2\" mb={4}>\r\n          {description}\r\n        </Typography>\r\n        <div ref={handleContainerLoaded}>{children}</div>\r\n        <Button color=\"primary\" variant=\"contained\" fullWidth>\r\n          <AddIcon />\r\n          Add new task\r\n        </Button>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction Task({ content, avatars }) {\r\n  return (\r\n    <TaskWrapper mb={4}>\r\n      <TaskWrapperContent>\r\n        {content.badges && content.badges.map((color, i) => <TaskBadge color={color} key={i} />)}\r\n\r\n        <TaskTitle variant=\"body1\" gutterBottom>\r\n          {content.title}\r\n        </TaskTitle>\r\n        \r\n        <TaskAvatars>\r\n          <AvatarGroup max={3}>\r\n            {avatars && avatars.map((avatar, i) => <Avatar src={`/static/img/avatars/avatar-${avatar}.jpg`} key={i} />)}\r\n          </AvatarGroup>\r\n        </TaskAvatars>\r\n\r\n        {content.notifications &&\r\n          <TaskNotifications>\r\n            <TaskNotificationsAmount>\r\n              {content.notifications}\r\n            </TaskNotificationsAmount>\r\n            <MessageCircleIcon />\r\n          </TaskNotifications>\r\n        }\r\n      </TaskWrapperContent>\r\n    </TaskWrapper>\r\n  );\r\n}\r\n\r\nconst demoTasks = [\r\n  {\r\n    title: \"Redesign the homepage\",\r\n    badges: [green[600], orange[600]],\r\n    notifications: 2\r\n  },\r\n  {\r\n    title: \"Upgrade dependencies to latest versions\",\r\n    badges: [green[600]],\r\n    notifications: 1\r\n  },\r\n  {\r\n    title: \"Google Adwords best practices\"\r\n  },\r\n  {\r\n    title: \"Improve site speed\",\r\n    badges: [green[600]],\r\n    notifications: 3\r\n  },\r\n  {\r\n    title: \"Stripe payment integration\",\r\n    badges: [blue[600]]\r\n  }\r\n];\r\n\r\nfunction Tasks() {\r\n  const containers = [];\r\n\r\n  const onContainerReady = container => {\r\n    containers.push(container);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dragula(containers);\r\n  }, [containers]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet title=\"Tasks\" />\r\n      <Typography variant=\"h3\" gutterBottom display=\"inline\">\r\n        Tasks\r\n      </Typography>\r\n\r\n      <Breadcrumbs aria-label=\"Breadcrumb\" mt={2}>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Dashboard\r\n        </Link>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Pages\r\n        </Link>\r\n        <Typography>Tasks</Typography>\r\n      </Breadcrumbs>\r\n\r\n      <Divider my={6} />\r\n\r\n      <Grid container spacing={6}>\r\n        <Grid item xs={12} lg={4} xl={4}>\r\n          <Lane\r\n            title=\"Backlog\"\r\n            description=\"Nam pretium turpis et arcu. Duis arcu.\"\r\n            onContainerLoaded={onContainerReady}\r\n          >\r\n            <Task content={demoTasks[0]} avatars={[1, 2, 3, 4]} />\r\n            <Task content={demoTasks[2]} avatars={[2]} />\r\n            <Task content={demoTasks[3]} avatars={[2, 3]} />\r\n            <Task content={demoTasks[1]} avatars={[]} />\r\n            <Task content={demoTasks[4]} avatars={[]} />\r\n          </Lane>\r\n        </Grid>\r\n        <Grid item xs={12} lg={4} xl={4}>\r\n          <Lane\r\n            title=\"In Progress\"\r\n            description=\"Curabitur ligula sapien, tincidunt non.\"\r\n            onContainerLoaded={onContainerReady}\r\n          >\r\n            <Task content={demoTasks[2]} avatars={[3, 1, 2]} />\r\n            <Task content={demoTasks[4]} avatars={[2]} />\r\n          </Lane>\r\n        </Grid>\r\n        <Grid item xs={12} lg={4} xl={4}>\r\n          <Lane\r\n            title=\"Completed\"\r\n            description=\"Aenean posuere, tortor sed cursus feugiat.\"\r\n            onContainerLoaded={onContainerReady}\r\n          >\r\n            <Task content={demoTasks[3]} avatars={[1, 2]} />\r\n            <Task content={demoTasks[2]} avatars={[4]} />\r\n            <Task content={demoTasks[0]} avatars={[]} />\r\n          </Lane>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Tasks;\r\n"],"sourceRoot":""}